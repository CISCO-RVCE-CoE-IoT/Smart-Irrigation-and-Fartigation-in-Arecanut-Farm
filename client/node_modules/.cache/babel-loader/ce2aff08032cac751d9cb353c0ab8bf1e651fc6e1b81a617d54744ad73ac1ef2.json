{"ast":null,"code":"var _jsxFileName = \"/home/mcalab3/Desktop/contributor/Smart-Irrigation-and-Fartigation-in-Arecanut-Farm/client/src/pages/User/Components/Farmer/Farms.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\nimport './Farms.css';\nimport clouds from './WeatherImages/clouds.png';\nimport clear from './WeatherImages/clear.png';\nimport drizzle from './WeatherImages/drizzle.png';\nimport rain from './WeatherImages/rain.png';\nimport mist from './WeatherImages/mist.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apikey = \"8925502a781648f4443f9e01d96c7ff5\";\nconst apiURL = \"https://api.openweathermap.org/data/2.5/weather?units=metric&lat=\";\nconst farmDetailAPI = \"/farmer/farm\"; // Modify this URL according to your API\n\nconst weatherImages = {\n  Clouds: clouds,\n  Clear: clear,\n  Rain: rain,\n  Drizzle: drizzle,\n  Mist: mist,\n  Haze: mist\n};\nconst Farms = /*#__PURE__*/_s(/*#__PURE__*/React.memo(_c = _s(({\n  farmDetails = [],\n  onFarmDetailsSelected\n}) => {\n  _s();\n  const farm_details = farmDetails === null || farmDetails === void 0 ? void 0 : farmDetails.farmer_farms;\n  const [weatherData, setWeatherData] = useState([]);\n  const [selectedFarmDetails, setSelectedFarmDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const checkWeather = useCallback(async (latitude, longitude) => {\n    try {\n      const response = await fetch(`${apiURL}${latitude}&lon=${longitude}&appid=${apikey}`);\n      if (response.status === 404) {\n        setError(\"Invalid coordinates, please try again.\");\n        return null;\n      } else if (!response.ok) {\n        setError(\"Failed to fetch weather data.\");\n        return null;\n      }\n      return await response.json();\n    } catch (error) {\n      console.error(\"Error fetching weather data:\", error);\n      setError(\"Error fetching weather data.\");\n    }\n    return null;\n  }, []);\n  const fetchFarmDetails = async farmId => {\n    setIsLoading(true);\n    try {\n      const response = await fetch(`${farmDetailAPI}/${farmId}`);\n      if (response.ok) {\n        const data = await response.json();\n        setSelectedFarmDetails(data);\n        // Pass the farm details back to the parent component\n        if (onFarmDetailsSelected) onFarmDetailsSelected(data);\n      } else {\n        setError(\"Error fetching farm details.\");\n      }\n    } catch (error) {\n      setError(\"Error fetching farm details.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    if (farm_details && farm_details.length > 0) {\n      const {\n        latitude,\n        longitude\n      } = farm_details[0];\n      checkWeather(latitude, longitude).then(data => {\n        setWeatherData((data === null || data === void 0 ? void 0 : data.weather) || []);\n      });\n    }\n  }, [farm_details, checkWeather]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"farms-container\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 20\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: farm_details === null || farm_details === void 0 ? void 0 : farm_details.map(farm => {\n        var _weatherData$, _weatherData$2;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => fetchFarmDetails(farm.farm_id),\n          className: \"farm-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: farm.farm_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: farm.location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-info\",\n            children: weatherData.length > 0 && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: weatherImages[(_weatherData$ = weatherData[0]) === null || _weatherData$ === void 0 ? void 0 : _weatherData$.main] || mist,\n              alt: (_weatherData$2 = weatherData[0]) === null || _weatherData$2 === void 0 ? void 0 : _weatherData$2.main\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)]\n        }, farm.farm_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}, \"2AYItJIJWZe3RxHAd9kemeLtI+U=\")), \"2AYItJIJWZe3RxHAd9kemeLtI+U=\");\n_c2 = Farms;\nexport default Farms;\nvar _c, _c2;\n$RefreshReg$(_c, \"Farms$React.memo\");\n$RefreshReg$(_c2, \"Farms\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","clouds","clear","drizzle","rain","mist","jsxDEV","_jsxDEV","apikey","apiURL","farmDetailAPI","weatherImages","Clouds","Clear","Rain","Drizzle","Mist","Haze","Farms","_s","memo","_c","farmDetails","onFarmDetailsSelected","farm_details","farmer_farms","weatherData","setWeatherData","selectedFarmDetails","setSelectedFarmDetails","isLoading","setIsLoading","error","setError","checkWeather","latitude","longitude","response","fetch","status","ok","json","console","fetchFarmDetails","farmId","data","length","then","weather","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","farm","_weatherData$","_weatherData$2","onClick","farm_id","farm_name","location","src","main","alt","_c2","$RefreshReg$"],"sources":["/home/mcalab3/Desktop/contributor/Smart-Irrigation-and-Fartigation-in-Arecanut-Farm/client/src/pages/User/Components/Farmer/Farms.js"],"sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from 'react';\nimport './Farms.css';\nimport clouds from './WeatherImages/clouds.png';\nimport clear from './WeatherImages/clear.png';\nimport drizzle from './WeatherImages/drizzle.png';\nimport rain from './WeatherImages/rain.png';\nimport mist from './WeatherImages/mist.png';\n\nconst apikey = \"8925502a781648f4443f9e01d96c7ff5\";\nconst apiURL = \"https://api.openweathermap.org/data/2.5/weather?units=metric&lat=\";\nconst farmDetailAPI = \"/farmer/farm\";  // Modify this URL according to your API\n\nconst weatherImages = {\n  Clouds: clouds,\n  Clear: clear,\n  Rain: rain,\n  Drizzle: drizzle,\n  Mist: mist,\n  Haze: mist, \n};\n\nconst Farms = React.memo(({ farmDetails = [], onFarmDetailsSelected }) => {\n  const farm_details = farmDetails?.farmer_farms;\n  const [weatherData, setWeatherData] = useState([]);\n  const [selectedFarmDetails, setSelectedFarmDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const checkWeather = useCallback(async (latitude, longitude) => {\n    try {\n      const response = await fetch(`${apiURL}${latitude}&lon=${longitude}&appid=${apikey}`);\n      if (response.status === 404) {\n        setError(\"Invalid coordinates, please try again.\");\n        return null;\n      } else if (!response.ok) {\n        setError(\"Failed to fetch weather data.\");\n        return null;\n      }\n      return await response.json();\n    } catch (error) {\n      console.error(\"Error fetching weather data:\", error);\n      setError(\"Error fetching weather data.\");\n    }\n    return null;\n  }, []);\n\n  const fetchFarmDetails = async (farmId) => {\n    setIsLoading(true);\n    try {\n      const response = await fetch(`${farmDetailAPI}/${farmId}`);\n      if (response.ok) {\n        const data = await response.json();\n        setSelectedFarmDetails(data);\n        // Pass the farm details back to the parent component\n        if (onFarmDetailsSelected) onFarmDetailsSelected(data);\n      } else {\n        setError(\"Error fetching farm details.\");\n      }\n    } catch (error) {\n      setError(\"Error fetching farm details.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (farm_details && farm_details.length > 0) {\n      const { latitude, longitude } = farm_details[0];\n      checkWeather(latitude, longitude).then((data) => {\n        setWeatherData(data?.weather || []);\n      });\n    }\n  }, [farm_details, checkWeather]);\n\n  return (\n    <div className=\"farms-container\">\n      {error && <div className=\"error\">{error}</div>}\n      {isLoading ? <div>Loading...</div> : (\n        <div>\n          {farm_details?.map((farm) => (\n            <div key={farm.farm_id} onClick={() => fetchFarmDetails(farm.farm_id)} className=\"farm-box\">\n              <h4>{farm.farm_name}</h4>\n              <p>{farm.location}</p>\n              <div className=\"weather-info\">\n                {weatherData.length > 0 && (\n                  <img src={weatherImages[weatherData[0]?.main] || mist} alt={weatherData[0]?.main} />\n                )}\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n});\n\nexport default Farms;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
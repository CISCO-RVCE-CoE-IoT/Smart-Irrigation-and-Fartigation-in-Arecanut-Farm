{"ast":null,"code":"var _jsxFileName = \"/home/mcalab3/Desktop/contributor/Smart-Irrigation-and-Fartigation-in-Arecanut-Farm/client/src/pages/User/Components/Farmer/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useMemo } from \"react\";\nimport L from \"leaflet\";\nimport 'leaflet/dist/leaflet.css';\nimport campass from './WeatherImages/campass.png';\nimport Modal from \"./Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapContainer = ({\n  collected_data\n}) => {\n  _s();\n  var _locationCoordinates$;\n  const locationCoordinates = collected_data === null || collected_data === void 0 ? void 0 : collected_data.location_coordinates;\n  const device_values = collected_data === null || collected_data === void 0 ? void 0 : collected_data.device_values;\n  const npkCoordinates = locationCoordinates === null || locationCoordinates === void 0 ? void 0 : (_locationCoordinates$ = locationCoordinates.farm_device) === null || _locationCoordinates$ === void 0 ? void 0 : _locationCoordinates$.map(device => ({\n    section_device_id: device.farm_device_id,\n    section_id: null,\n    // You can assign the appropriate section_id if available\n    section_name: null,\n    // You can assign the appropriate section_name if available\n    device_name: device.device_name,\n    device_location: device.device_location\n  }));\n\n  // Memoize the updatedLocationCoordinates to avoid unnecessary re-renders\n  const updatedLocationCoordinates = useMemo(() => {\n    return {\n      ...locationCoordinates,\n      section_device: [...((locationCoordinates === null || locationCoordinates === void 0 ? void 0 : locationCoordinates.section_device) || []), ...npkCoordinates]\n    };\n  }, [locationCoordinates, npkCoordinates]);\n  const mapRef = useRef(null);\n  const mapInstance = useRef(null);\n  const [legendItems, setLegendItems] = useState([]);\n  const scrollerRef = useRef(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [chartData, setChartData] = useState(null);\n  const [chartType, setChartType] = useState('line');\n\n  // Horizontal scrolling for the map container\n  useEffect(() => {\n    const handleWheel = event => {\n      event.preventDefault();\n      if (scrollerRef.current) {\n        scrollerRef.current.scrollLeft += event.deltaY;\n      }\n    };\n    const scroller = scrollerRef.current;\n    if (scroller) {\n      scroller.addEventListener(\"wheel\", handleWheel, {\n        passive: false\n      });\n    }\n    return () => {\n      if (scroller) {\n        scroller.removeEventListener(\"wheel\", handleWheel);\n      }\n    };\n  }, []);\n\n  // Initialize the map and markers\n  useEffect(() => {\n    var _updatedLocationCoord, _device_values$moistu, _updatedLocationCoord2;\n    if (!updatedLocationCoordinates || !device_values || !mapRef.current) return;\n    if (mapInstance.current) {\n      mapInstance.current.remove();\n    }\n    mapInstance.current = L.map(mapRef.current);\n    L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n      maxZoom: 27,\n      minZoom: 2\n    }).addTo(mapInstance.current);\n    const colorMap = {\n      farmland: \"green\",\n      valve: \"red\",\n      moisture: \"blue\",\n      npk: \"orange\"\n    };\n    const farmlandCoordinates = ((_updatedLocationCoord = updatedLocationCoordinates.farm_coordinates) === null || _updatedLocationCoord === void 0 ? void 0 : _updatedLocationCoord.map(coord => {\n      const [lat, lon] = coord.split(\",\").map(Number);\n      return [lat, lon];\n    })) || [];\n    if (farmlandCoordinates.length > 0) {\n      const farmlandLayer = L.polygon(farmlandCoordinates, {\n        color: colorMap.farmland\n      }).addTo(mapInstance.current);\n      farmlandLayer.bindPopup(\"Farmland Area\");\n      mapInstance.current.fitBounds(farmlandLayer.getBounds()); // Adjust the map view to the farm coordinates\n    }\n    const moistureValuesMap = new Map();\n    device_values === null || device_values === void 0 ? void 0 : (_device_values$moistu = device_values.moisture_device_value) === null || _device_values$moistu === void 0 ? void 0 : _device_values$moistu.forEach(({\n      section_device_id,\n      moisture_value\n    }) => {\n      moistureValuesMap.set(section_device_id, moisture_value);\n    });\n    (_updatedLocationCoord2 = updatedLocationCoordinates.section_device) === null || _updatedLocationCoord2 === void 0 ? void 0 : _updatedLocationCoord2.forEach(device => {\n      var _device$device_locati;\n      const [lat, lon] = ((_device$device_locati = device.device_location) === null || _device$device_locati === void 0 ? void 0 : _device$device_locati.split(\",\").map(Number)) || [];\n      if (lat && lon && isWithinBounds([lat, lon], farmlandCoordinates)) {\n        if (device.device_name === \"moisture\") {\n          const moistureValue = moistureValuesMap.get(device.section_device_id) || 0;\n          const moistureRadius = moistureValue * 0.24;\n          const moistureCircle = L.circle([lat, lon], {\n            radius: moistureRadius,\n            fillColor: colorMap.moisture,\n            color: colorMap.moisture,\n            fillOpacity: 0.4,\n            weight: 1\n          }).bindPopup(`Moisture Sensor in ${device.section_name}<br/>Value: ${moistureValue}`).on(\"click\", () => handleMoistureSensorClick(device.section_device_id));\n          moistureCircle.addTo(mapInstance.current);\n          L.circleMarker([lat, lon], {\n            radius: 5,\n            fillColor: colorMap.moisture,\n            color: colorMap.moisture,\n            fillOpacity: 1,\n            weight: 2\n          }).bindPopup(`Moisture Sensor in ${device.section_name}`).addTo(mapInstance.current);\n        }\n        if (device.device_name === \"valve\") {\n          L.circleMarker([lat, lon], {\n            radius: 8,\n            fillColor: colorMap.valve,\n            color: colorMap.valve,\n            fillOpacity: 0.8,\n            weight: 2\n          }).bindPopup(`Valve in ${device.section_name}`).on(\"click\", () => handleValveClick(device.section_device_id)).addTo(mapInstance.current);\n        }\n        if (device.device_name === \"npk\") {\n          L.circleMarker([lat, lon], {\n            radius: 8,\n            fillColor: colorMap.npk,\n            color: colorMap.npk,\n            fillOpacity: 0.8,\n            weight: 2\n          }).bindPopup(`NPK Sensor in ${device.section_name}`).addTo(mapInstance.current);\n        }\n      }\n    });\n    const legendData = [{\n      type: \"moisture\",\n      color: colorMap.moisture\n    }, {\n      type: \"valve\",\n      color: colorMap.valve\n    }, {\n      type: \"npk\",\n      color: colorMap.npk\n    }];\n    setLegendItems(legendData);\n  }, [updatedLocationCoordinates, device_values === null || device_values === void 0 ? void 0 : device_values.moisture_device_value]);\n  const isWithinBounds = (coordinates, farmlandCoordinates) => {\n    const polygon = L.polygon(farmlandCoordinates);\n    return polygon.getBounds().contains(coordinates);\n  };\n  const handleMoistureSensorClick = async sensorId => {\n    try {\n      const response = await fetch(`/farmer/farm/moisture/${sensorId}`);\n      const data = await response.json();\n      if (data.length === 0) {\n        console.error(\"No data available for the selected sensor\");\n        return;\n      }\n      const labels = data.map(item => new Date(item.timestamp).toLocaleString());\n      const values = data.map(item => item.moisture_value);\n      if ((chartData === null || chartData === void 0 ? void 0 : chartData.values) !== values || (chartData === null || chartData === void 0 ? void 0 : chartData.labels) !== labels) {\n        setChartData({\n          labels,\n          values\n        });\n        setChartType('line');\n        setIsModalOpen(true);\n      }\n    } catch (error) {\n      console.error(\"Error fetching moisture data:\", error);\n    }\n  };\n  const handleValveClick = async valveId => {\n    try {\n      const response = await fetch(`/farmer/farm/valve/${valveId}`);\n      const data = await response.json();\n      const labels = data.map(item => new Date(item.timestamp).toLocaleString());\n      const values = data.map(item => {\n        var _item$valve_status;\n        return (_item$valve_status = item.valve_status) === null || _item$valve_status === void 0 ? void 0 : _item$valve_status.trim();\n      });\n      if ((chartData === null || chartData === void 0 ? void 0 : chartData.values) !== values || (chartData === null || chartData === void 0 ? void 0 : chartData.labels) !== labels) {\n        setChartData({\n          labels,\n          values\n        });\n        setChartType('timeline');\n        setIsModalOpen(true);\n      }\n    } catch (error) {\n      console.error(\"Error fetching valve data:\", error);\n    }\n  };\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setChartData(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: scrollerRef,\n    className: \"borderring p-0\",\n    style: {\n      overflow: \"hidden\",\n      scrollbarWidth: \"none\",\n      msOverflowStyle: \"none\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"borderring\",\n      style: {\n        position: \"relative\",\n        border: 'none'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"text-secondary\",\n        style: {\n          zIndex: 2,\n          position: \"relative\",\n          top: '0px',\n          left: '0px'\n        },\n        children: \"Field Overview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: mapRef,\n        style: {\n          width: \"100%\",\n          height: \"445px\",\n          scale: \"1.45\",\n          overflow: \"hidden\",\n          position: \"relative\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"absolute\",\n          top: \"10px\",\n          right: \"10px\",\n          backgroundColor: \"white\",\n          padding: \"6px\",\n          borderRadius: \"5px\",\n          boxShadow: \"0 0 5px rgba(0,0,0,0.5)\",\n          zIndex: 10\n        },\n        children: [legendItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"10px\",\n              height: \"10px\",\n              backgroundColor: item.color,\n              marginRight: \"5px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: '13px'\n            },\n            children: item.type.charAt(0).toUpperCase() + item.type.slice(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this)]\n        }, item.type, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: campass,\n          width: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '13px'\n          },\n          children: \"Campass\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onClose: handleCloseModal,\n      chartData: chartData,\n      chartType: chartType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n};\n_s(MapContainer, \"Y3AGbMMVTbA7GrZvUN88o5kcgPQ=\");\n_c = MapContainer;\nexport default MapContainer;\nvar _c;\n$RefreshReg$(_c, \"MapContainer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useMemo","L","campass","Modal","jsxDEV","_jsxDEV","MapContainer","collected_data","_s","_locationCoordinates$","locationCoordinates","location_coordinates","device_values","npkCoordinates","farm_device","map","device","section_device_id","farm_device_id","section_id","section_name","device_name","device_location","updatedLocationCoordinates","section_device","mapRef","mapInstance","legendItems","setLegendItems","scrollerRef","isModalOpen","setIsModalOpen","chartData","setChartData","chartType","setChartType","handleWheel","event","preventDefault","current","scrollLeft","deltaY","scroller","addEventListener","passive","removeEventListener","_updatedLocationCoord","_device_values$moistu","_updatedLocationCoord2","remove","tileLayer","maxZoom","minZoom","addTo","colorMap","farmland","valve","moisture","npk","farmlandCoordinates","farm_coordinates","coord","lat","lon","split","Number","length","farmlandLayer","polygon","color","bindPopup","fitBounds","getBounds","moistureValuesMap","Map","moisture_device_value","forEach","moisture_value","set","_device$device_locati","isWithinBounds","moistureValue","get","moistureRadius","moistureCircle","circle","radius","fillColor","fillOpacity","weight","on","handleMoistureSensorClick","circleMarker","handleValveClick","legendData","type","coordinates","contains","sensorId","response","fetch","data","json","console","error","labels","item","Date","timestamp","toLocaleString","values","valveId","_item$valve_status","valve_status","trim","handleCloseModal","ref","className","style","overflow","scrollbarWidth","msOverflowStyle","children","position","border","zIndex","top","left","fileName","_jsxFileName","lineNumber","columnNumber","width","height","scale","right","backgroundColor","padding","borderRadius","boxShadow","display","alignItems","marginRight","fontSize","charAt","toUpperCase","slice","src","isOpen","onClose","_c","$RefreshReg$"],"sources":["/home/mcalab3/Desktop/contributor/Smart-Irrigation-and-Fartigation-in-Arecanut-Farm/client/src/pages/User/Components/Farmer/Map.js"],"sourcesContent":["import React, { useEffect, useRef, useState, useMemo } from \"react\";\nimport L from \"leaflet\";\nimport 'leaflet/dist/leaflet.css';\nimport campass from './WeatherImages/campass.png';\nimport Modal from \"./Modal\";\n\nconst MapContainer = ({ collected_data }) => {\n\n  const locationCoordinates = collected_data?.location_coordinates;\n  const device_values = collected_data?.device_values;\n  const npkCoordinates = locationCoordinates?.farm_device?.map(device => ({\n    section_device_id: device.farm_device_id,\n    section_id: null,  // You can assign the appropriate section_id if available\n    section_name: null,  // You can assign the appropriate section_name if available\n    device_name: device.device_name,\n    device_location: device.device_location\n  }));\n\n  // Memoize the updatedLocationCoordinates to avoid unnecessary re-renders\n  const updatedLocationCoordinates = useMemo(() => {\n    return {\n      ...locationCoordinates,\n      section_device: [\n        ...(locationCoordinates?.section_device || []),\n        ...npkCoordinates\n      ]\n    };\n  }, [locationCoordinates, npkCoordinates]);\n\n  const mapRef = useRef(null);\n  const mapInstance = useRef(null);\n  const [legendItems, setLegendItems] = useState([]);\n  const scrollerRef = useRef(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [chartData, setChartData] = useState(null);\n  const [chartType, setChartType] = useState('line');\n\n  // Horizontal scrolling for the map container\n  useEffect(() => {\n    const handleWheel = (event) => {\n      event.preventDefault();\n      if (scrollerRef.current) {\n        scrollerRef.current.scrollLeft += event.deltaY;\n      }\n    };\n\n    const scroller = scrollerRef.current;\n    if (scroller) {\n      scroller.addEventListener(\"wheel\", handleWheel, { passive: false });\n    }\n    return () => {\n      if (scroller) {\n        scroller.removeEventListener(\"wheel\", handleWheel);\n      }\n    };\n  }, []);\n\n  // Initialize the map and markers\n  useEffect(() => {\n    if (!updatedLocationCoordinates || !device_values || !mapRef.current) return;\n    if (mapInstance.current) {\n      mapInstance.current.remove();\n    }\n    mapInstance.current = L.map(mapRef.current);\n    L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n      maxZoom: 27,\n      minZoom: 2,\n    }).addTo(mapInstance.current);\n\n    const colorMap = {\n      farmland: \"green\",\n      valve: \"red\",\n      moisture: \"blue\",\n      npk: \"orange\",\n    };\n\n    const farmlandCoordinates = updatedLocationCoordinates.farm_coordinates?.map(coord => {\n      const [lat, lon] = coord.split(\",\").map(Number);\n      return [lat, lon];\n    }) || [];\n\n    if (farmlandCoordinates.length > 0) {\n      const farmlandLayer = L.polygon(farmlandCoordinates, { color: colorMap.farmland }).addTo(mapInstance.current);\n      farmlandLayer.bindPopup(\"Farmland Area\");\n      mapInstance.current.fitBounds(farmlandLayer.getBounds()); // Adjust the map view to the farm coordinates\n    }\n\n    const moistureValuesMap = new Map();\n    device_values?.moisture_device_value?.forEach(({ section_device_id, moisture_value }) => {\n      moistureValuesMap.set(section_device_id, moisture_value);\n    });\n\n    updatedLocationCoordinates.section_device?.forEach(device => {\n      const [lat, lon] = device.device_location?.split(\",\").map(Number) || [];\n      if (lat && lon && isWithinBounds([lat, lon], farmlandCoordinates)) {\n        if (device.device_name === \"moisture\") {\n          const moistureValue = moistureValuesMap.get(device.section_device_id) || 0;\n          const moistureRadius = moistureValue * 0.24;\n          const moistureCircle = L.circle([lat, lon], {\n            radius: moistureRadius,\n            fillColor: colorMap.moisture,\n            color: colorMap.moisture,\n            fillOpacity: 0.4,\n            weight: 1,\n          })\n          .bindPopup(`Moisture Sensor in ${device.section_name}<br/>Value: ${moistureValue}`)\n          .on(\"click\", () => handleMoistureSensorClick(device.section_device_id));\n          moistureCircle.addTo(mapInstance.current);\n\n          L.circleMarker([lat, lon], {\n            radius: 5,\n            fillColor: colorMap.moisture,\n            color: colorMap.moisture,\n            fillOpacity: 1,\n            weight: 2,\n          })\n          .bindPopup(`Moisture Sensor in ${device.section_name}`)\n          .addTo(mapInstance.current);\n        }\n\n        if (device.device_name === \"valve\") {\n          L.circleMarker([lat, lon], {\n            radius: 8,\n            fillColor: colorMap.valve,\n            color: colorMap.valve,\n            fillOpacity: 0.8,\n            weight: 2,\n          })\n          .bindPopup(`Valve in ${device.section_name}`)\n          .on(\"click\", () => handleValveClick(device.section_device_id))\n          .addTo(mapInstance.current);\n        }\n\n        if (device.device_name === \"npk\") {\n          L.circleMarker([lat, lon], {\n            radius: 8,\n            fillColor: colorMap.npk,\n            color: colorMap.npk,\n            fillOpacity: 0.8,\n            weight: 2,\n          })\n          .bindPopup(`NPK Sensor in ${device.section_name}`)\n          .addTo(mapInstance.current);\n        }\n      }\n    });\n\n    const legendData = [\n      { type: \"moisture\", color: colorMap.moisture },\n      { type: \"valve\", color: colorMap.valve },\n      { type: \"npk\", color: colorMap.npk },\n    ];\n    setLegendItems(legendData);\n  }, [updatedLocationCoordinates, device_values?.moisture_device_value]);\n\n  const isWithinBounds = (coordinates, farmlandCoordinates) => {\n    const polygon = L.polygon(farmlandCoordinates);\n    return polygon.getBounds().contains(coordinates);\n  };\n\n  const handleMoistureSensorClick = async (sensorId) => {\n    try {\n      const response = await fetch(`/farmer/farm/moisture/${sensorId}`);\n      const data = await response.json();\n      if (data.length === 0) {\n        console.error(\"No data available for the selected sensor\");\n        return;\n      }\n      const labels = data.map(item => new Date(item.timestamp).toLocaleString());\n      const values = data.map(item => item.moisture_value);\n      if (chartData?.values !== values || chartData?.labels !== labels) {\n        setChartData({ labels, values });\n        setChartType('line');\n        setIsModalOpen(true);\n      }\n    } catch (error) {\n      console.error(\"Error fetching moisture data:\", error);\n    }\n  };\n\n  const handleValveClick = async (valveId) => {\n    try {\n      const response = await fetch(`/farmer/farm/valve/${valveId}`);\n      const data = await response.json();\n      const labels = data.map(item => new Date(item.timestamp).toLocaleString());\n      const values = data.map(item => item.valve_status?.trim());\n      if (chartData?.values !== values || chartData?.labels !== labels) {\n        setChartData({ labels, values });\n        setChartType('timeline');\n        setIsModalOpen(true);\n      }\n    } catch (error) {\n      console.error(\"Error fetching valve data:\", error);\n    }\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setChartData(null);\n  };\n\n  return (\n    <div ref={scrollerRef} className=\"borderring p-0\" style={{ overflow: \"hidden\", scrollbarWidth: \"none\", msOverflowStyle: \"none\" }}>\n      <div className=\"borderring\" style={{ position: \"relative\", border: 'none' }}>\n        <h6 className=\"text-secondary\" style={{ zIndex: 2, position: \"relative\", top: '0px', left: '0px' }}>Field Overview</h6>\n        <div ref={mapRef} style={{ width: \"100%\", height: \"445px\", scale: \"1.45\", overflow: \"hidden\", position: \"relative\" }} ></div>\n        <div style={{ position: \"absolute\", top: \"10px\", right: \"10px\", backgroundColor: \"white\", padding: \"6px\", borderRadius: \"5px\", boxShadow: \"0 0 5px rgba(0,0,0,0.5)\", zIndex: 10, }}>\n          {legendItems.map((item) => (\n            <div key={item.type} style={{ display: \"flex\", alignItems: \"center\" }}>\n              <div style={{ width: \"10px\", height: \"10px\", backgroundColor: item.color, marginRight: \"5px\" }}></div>\n              <span style={{ fontSize: '13px' }}>{item.type.charAt(0).toUpperCase() + item.type.slice(1)}</span>\n            </div>\n          ))}\n          <img src={campass} width={20} />\n          <span style={{ fontSize: '13px' }}>Campass</span>\n        </div>\n      </div>\n      <Modal isOpen={isModalOpen} onClose={handleCloseModal} chartData={chartData} chartType={chartType} />\n    </div>\n  );\n};\n\nexport default MapContainer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
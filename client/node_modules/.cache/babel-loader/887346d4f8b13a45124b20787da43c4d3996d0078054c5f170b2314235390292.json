{"ast":null,"code":"var _jsxFileName = \"/home/mcalab3/Desktop/contributor/Smart-Irrigation-and-Fartigation-in-Arecanut-Farm/client/src/pages/User/Components/Farmer/Farms.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\nimport './Farms.css';\nimport clouds from './WeatherImages/clouds.png';\nimport clear from './WeatherImages/clear.png';\nimport drizzle from './WeatherImages/drizzle.png';\nimport rain from './WeatherImages/rain.png';\nimport mist from './WeatherImages/mist.png';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst apikey = \"8925502a781648f4443f9e01d96c7ff5\";\nconst apiURL = \"https://api.openweathermap.org/data/2.5/weather?units=metric&lat=\";\nconst weatherImages = {\n  Clouds: clouds,\n  Clear: clear,\n  Rain: rain,\n  Drizzle: drizzle,\n  Mist: mist,\n  Haze: mist // Mapping Mist/Haze to same image as both weather types have similar icons\n};\nconst Farms = /*#__PURE__*/_s(/*#__PURE__*/React.memo(_c = _s(({\n  farmDetails = []\n}) => {\n  _s();\n  const [weatherData, setWeatherData] = useState([]);\n  const checkWeather = useCallback(async (latitude, longitude) => {\n    try {\n      const response = await fetch(`${apiURL}${latitude}&lon=${longitude}&appid=${apikey}`);\n      if (response.status === 404) {\n        window.alert(\"Enter Valid Coordinates\");\n      } else {\n        return await response.json();\n      }\n    } catch (error) {\n      console.error(\"Error fetching weather data:\", error);\n    }\n    return null;\n  }, []);\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      const weatherPromises = farmDetails.map(async farm => {\n        const [latitude, longitude] = farm.farm_location.split(',').map(coord => parseFloat(coord.trim()));\n        const weather = await checkWeather(latitude, longitude);\n        return {\n          ...farm,\n          weather,\n          updatedAt: new Date().toLocaleTimeString()\n        };\n      });\n      const results = await Promise.allSettled(weatherPromises);\n      const successfulResults = results.filter(result => result.status === 'fulfilled').map(result => result.value);\n      setWeatherData(successfulResults);\n    };\n    if (farmDetails.length > 0) {\n      fetchWeatherData();\n    }\n  }, [farmDetails, checkWeather]);\n  const upperCase = name => name.charAt(0).toUpperCase() + name.slice(1).toLowerCase();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"fields\",\n    style: {\n      height: '380px',\n      overflowY: 'auto'\n    },\n    children: weatherData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fieldnumbers\",\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"text-secondary\",\n        children: \"Farms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field-scroller\",\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          gap: '10px'\n        },\n        children: weatherData.map((farm, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"farms farm-bordering d-flex align-items-center justify-content-between bg-dark\",\n          style: {\n            color: 'black',\n            padding: '6px 14px',\n            borderRadius: '5px',\n            background: \"linear-gradient(to right, #f1f1f1 5%, #9bddf7)\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"me-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"fw-bold\",\n              children: upperCase(farm.farm_name)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-dark fs-6\",\n              children: farm.active ? \"Active\" : \"Inactive\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-center\",\n              children: farm.weather ? upperCase(farm.weather.name) : \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-dark\",\n              children: [farm.farm_size, \" ha\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ps-4 d-flex flex-column\",\n            children: farm.weather && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: weatherImages[farm.weather.weather[0].main] || '',\n                width: 80,\n                alt: \"Weather Icon\",\n                className: \"m-0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                className: \"text-center text-secondary m-0\",\n                children: [farm.weather.weather[0].main, \" Sky\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"text-center text-secondary m-0\",\n                children: [farm.weather.main.temp, \" \\xB0C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}, \"XOyBEjcdBmSUw8fHGJB4m35EuY4=\")), \"XOyBEjcdBmSUw8fHGJB4m35EuY4=\");\n_c2 = Farms;\nexport default Farms;\nvar _c, _c2;\n$RefreshReg$(_c, \"Farms$React.memo\");\n$RefreshReg$(_c2, \"Farms\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","clouds","clear","drizzle","rain","mist","jsxDEV","_jsxDEV","Fragment","_Fragment","apikey","apiURL","weatherImages","Clouds","Clear","Rain","Drizzle","Mist","Haze","Farms","_s","memo","_c","farmDetails","weatherData","setWeatherData","checkWeather","latitude","longitude","response","fetch","status","window","alert","json","error","console","fetchWeatherData","weatherPromises","map","farm","farm_location","split","coord","parseFloat","trim","weather","updatedAt","Date","toLocaleTimeString","results","Promise","allSettled","successfulResults","filter","result","value","length","upperCase","name","charAt","toUpperCase","slice","toLowerCase","id","style","height","overflowY","children","className","fileName","_jsxFileName","lineNumber","columnNumber","display","flexDirection","gap","index","color","padding","borderRadius","background","farm_name","active","farm_size","src","main","width","alt","temp","_c2","$RefreshReg$"],"sources":["/home/mcalab3/Desktop/contributor/Smart-Irrigation-and-Fartigation-in-Arecanut-Farm/client/src/pages/User/Components/Farmer/Farms.js"],"sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from 'react';\nimport './Farms.css';\nimport clouds from './WeatherImages/clouds.png';\nimport clear from './WeatherImages/clear.png';\nimport drizzle from './WeatherImages/drizzle.png';\nimport rain from './WeatherImages/rain.png';\nimport mist from './WeatherImages/mist.png';\n\nconst apikey = \"8925502a781648f4443f9e01d96c7ff5\";\nconst apiURL = \"https://api.openweathermap.org/data/2.5/weather?units=metric&lat=\";\n\nconst weatherImages = {\n  Clouds: clouds,\n  Clear: clear,\n  Rain: rain,\n  Drizzle: drizzle,\n  Mist: mist,\n  Haze: mist, // Mapping Mist/Haze to same image as both weather types have similar icons\n};\n\nconst Farms = React.memo(({ farmDetails = [] }) => {\n  const [weatherData, setWeatherData] = useState([]);\n  \n  const checkWeather = useCallback(async (latitude, longitude) => {\n    try {\n      const response = await fetch(`${apiURL}${latitude}&lon=${longitude}&appid=${apikey}`);\n      if (response.status === 404) {\n        window.alert(\"Enter Valid Coordinates\");\n      } else {\n        return await response.json();\n      }\n    } catch (error) {\n      console.error(\"Error fetching weather data:\", error);\n    }\n    return null;\n  }, []);\n\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      const weatherPromises = farmDetails.map(async (farm) => {\n        const [latitude, longitude] = farm.farm_location.split(',').map(coord => parseFloat(coord.trim()));\n        const weather = await checkWeather(latitude, longitude);\n        return { ...farm, weather, updatedAt: new Date().toLocaleTimeString() };\n      });\n      \n      const results = await Promise.allSettled(weatherPromises);\n      const successfulResults = results.filter(result => result.status === 'fulfilled').map(result => result.value);\n      setWeatherData(successfulResults);\n    };\n\n    if (farmDetails.length > 0) {\n      fetchWeatherData();\n    }\n  }, [farmDetails, checkWeather]);\n\n  const upperCase = (name) => name.charAt(0).toUpperCase() + name.slice(1).toLowerCase();\n\n  return (\n    <div id=\"fields\" style={{ height: '380px', overflowY: 'auto' }}>\n      {weatherData.length > 0 && (\n        <div className=\"fieldnumbers\">\n          <h6 className=\"text-secondary\">Farms</h6>\n          <div\n            className=\"field-scroller\"\n            style={{ display: 'flex', flexDirection: 'column', gap: '10px' }}\n          >\n            {weatherData.map((farm, index) => (\n              <div\n                className=\"farms farm-bordering d-flex align-items-center justify-content-between bg-dark\"\n                key={index}\n                style={{\n                  color: 'black',\n                  padding: '6px 14px',\n                  borderRadius: '5px',\n                  background: \"linear-gradient(to right, #f1f1f1 5%, #9bddf7)\"\n                }}\n              >\n                <div className='me-5'>\n                  <h5 className=\"fw-bold\">{upperCase(farm.farm_name)}</h5>\n                  <span className=\"text-dark fs-6\">{farm.active ? \"Active\" : \"Inactive\"}</span>\n                  <br />\n                  <small className='text-center'>{farm.weather ? upperCase(farm.weather.name) : \"Loading...\"}</small>\n                  <br />\n                  <small className=\"text-dark\">{farm.farm_size} ha</small>\n                </div>\n                <div className='ps-4 d-flex flex-column'>\n                  {farm.weather && (\n                    <>\n                      <img\n                        src={weatherImages[farm.weather.weather[0].main] || ''}\n                        width={80}\n                        alt=\"Weather Icon\"\n                        className='m-0'\n                      />\n                      <strong className='text-center text-secondary m-0'>{farm.weather.weather[0].main} Sky</strong>\n                      <small className=\"text-center text-secondary m-0\">{farm.weather.main.temp} °C</small>\n                    </>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n});\n\nexport default Farms;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
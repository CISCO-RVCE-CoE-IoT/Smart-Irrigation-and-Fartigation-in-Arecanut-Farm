{"ast":null,"code":"var _jsxFileName = \"/home/mcalab3/Desktop/contributor/Smart-Irrigation-and-Fartigation-in-Arecanut-Farm/client/src/pages/User/Components/Farmer/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport campass from \"./WeatherImages/campass.png\";\nimport Modal from \"./Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapContainer = ({\n  collected_data\n}) => {\n  _s();\n  const locationCoordinates = collected_data === null || collected_data === void 0 ? void 0 : collected_data.location_coordinates;\n  const device_values = collected_data === null || collected_data === void 0 ? void 0 : collected_data.device_values;\n  const mapRef = useRef(null);\n  const mapInstance = useRef(null);\n  const [legendItems, setLegendItems] = useState([]);\n  const scrollerRef = useRef(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [chartData, setChartData] = useState(null);\n  const [chartType, setChartType] = useState(\"line\");\n\n  // Horizontal scrolling\n  useEffect(() => {\n    const handleWheel = event => {\n      event.preventDefault();\n      if (scrollerRef.current) {\n        scrollerRef.current.scrollLeft += event.deltaY;\n      }\n    };\n    const scroller = scrollerRef.current;\n    if (scroller) {\n      scroller.addEventListener(\"wheel\", handleWheel, {\n        passive: false\n      });\n    }\n    return () => {\n      if (scroller) {\n        scroller.removeEventListener(\"wheel\", handleWheel);\n      }\n    };\n  }, []);\n\n  // Initialize the map and markers\n  useEffect(() => {\n    var _locationCoordinates$, _device_values$moistu, _locationCoordinates$2;\n    if (!locationCoordinates || !device_values || !mapRef.current) return;\n    if (mapInstance.current) {\n      mapInstance.current.remove();\n    }\n    mapInstance.current = L.map(mapRef.current).setView([16.22525, 74.8424], 16);\n    L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n      maxZoom: 27,\n      minZoom: 2\n    }).addTo(mapInstance.current);\n    const colorMap = {\n      moisture: \"blue\",\n      valve: \"red\",\n      npk: \"orange\"\n    };\n\n    // Draw farmland area\n    const farmlandCoordinates = ((_locationCoordinates$ = locationCoordinates.farm_coordinates) === null || _locationCoordinates$ === void 0 ? void 0 : _locationCoordinates$.map(coord => {\n      const [lat, lon] = coord.split(\",\").map(Number);\n      return [lat, lon];\n    })) || [];\n    if (farmlandCoordinates.length > 0) {\n      L.polygon(farmlandCoordinates, {\n        color: \"green\"\n      }).addTo(mapInstance.current).bindPopup(\"Farmland Area\");\n    }\n\n    // Prepare device markers\n    const moistureValuesMap = new Map();\n    device_values === null || device_values === void 0 ? void 0 : (_device_values$moistu = device_values.moisture_device_value) === null || _device_values$moistu === void 0 ? void 0 : _device_values$moistu.forEach(({\n      section_device_id,\n      moisture_value\n    }) => {\n      moistureValuesMap.set(section_device_id, moisture_value);\n    });\n    const legendSensors = new Set();\n    const uniqueDeviceMarkers = [];\n    (_locationCoordinates$2 = locationCoordinates.section_device) === null || _locationCoordinates$2 === void 0 ? void 0 : _locationCoordinates$2.forEach(device => {\n      var _device$device_locati;\n      const [lat, lon] = ((_device$device_locati = device.device_location) === null || _device$device_locati === void 0 ? void 0 : _device$device_locati.split(\",\").map(Number)) || [];\n      if (!lat || !lon) return;\n      if (isWithinBounds([lat, lon], farmlandCoordinates)) {\n        if (device.device_name === \"moisture\") {\n          const moistureValue = moistureValuesMap.get(device.section_device_id) || 0;\n          const moistureRadius = moistureValue * 10; // Scale radius\n          L.circle([lat, lon], {\n            radius: moistureRadius,\n            fillColor: colorMap.moisture,\n            color: colorMap.moisture,\n            fillOpacity: 0.4,\n            weight: 1\n          }).bindPopup(`Moisture Sensor in ${device.section_name}<br/>Value: ${moistureValue}`).on(\"click\", () => handleSensorClick(device.section_device_id, \"moisture\")).addTo(mapInstance.current);\n          legendSensors.add(\"moisture\");\n        } else if (device.device_name === \"valve\") {\n          L.circleMarker([lat, lon], {\n            radius: 8,\n            fillColor: colorMap.valve,\n            color: colorMap.valve,\n            fillOpacity: 0.8,\n            weight: 2\n          }).bindPopup(`Valve in ${device.section_name}`).on(\"click\", () => handleSensorClick(device.section_device_id, \"valve\")).addTo(mapInstance.current);\n          legendSensors.add(\"valve\");\n        } else if (device.device_name === \"npk\") {\n          L.circleMarker([lat, lon], {\n            radius: 8,\n            fillColor: colorMap.npk,\n            color: colorMap.npk,\n            fillOpacity: 0.8,\n            weight: 2\n          }).bindPopup(`NPK Sensor in ${device.section_name}`).addTo(mapInstance.current);\n          legendSensors.add(\"npk\");\n        }\n      }\n    });\n\n    // Update legend\n    setLegendItems(Array.from(legendSensors).map(sensor => ({\n      type: sensor,\n      color: colorMap[sensor]\n    })));\n  }, [locationCoordinates, device_values]);\n  const isWithinBounds = (coordinates, farmlandCoordinates) => {\n    const polygon = L.polygon(farmlandCoordinates);\n    return polygon.getBounds().contains(coordinates);\n  };\n  const handleSensorClick = async (sensorId, type) => {\n    const endpoint = type === \"moisture\" ? `/farmer/farm/moisture/${sensorId}` : `/farmer/farm/valve/${sensorId}`;\n    try {\n      const response = await fetch(endpoint);\n      const data = await response.json();\n      if (data.length === 0) {\n        console.error(`No data available for the selected ${type} sensor`);\n        return;\n      }\n      const labels = data.map(item => item.timestamp ? new Date(item.timestamp).toLocaleString() : null);\n      const values = type === \"moisture\" ? data.map(item => item.moisture_value) : data.map(item => item.valve_status);\n      setChartData({\n        labels: labels.filter(Boolean),\n        values: values.filter(Boolean)\n      });\n      setChartType(type === \"moisture\" ? \"line\" : \"timeline\");\n      setIsModalOpen(true);\n    } catch (error) {\n      console.error(`Error fetching ${type} data:`, error);\n    }\n  };\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setChartData(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: scrollerRef,\n    className: \"borderring p-0\",\n    style: {\n      overflow: \"hidden\",\n      scrollbarWidth: \"none\",\n      msOverflowStyle: \"none\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"borderring\",\n      style: {\n        position: \"relative\",\n        border: \"none\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"text-secondary\",\n        style: {\n          zIndex: 2,\n          position: \"relative\"\n        },\n        children: \"Field Overview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: mapRef,\n        style: {\n          width: \"100%\",\n          height: \"445px\",\n          scale: \"1.45\",\n          overflow: \"hidden\",\n          position: \"relative\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"absolute\",\n          top: \"10px\",\n          right: \"10px\",\n          backgroundColor: \"white\",\n          padding: \"6px\",\n          borderRadius: \"5px\",\n          boxShadow: \"0 0 5px rgba(0,0,0,0.5)\",\n          zIndex: 10\n        },\n        children: [legendItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"10px\",\n              height: \"10px\",\n              backgroundColor: item.color,\n              marginRight: \"5px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: \"13px\"\n            },\n            children: item.type.charAt(0).toUpperCase() + item.type.slice(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this)]\n        }, item.type, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: campass,\n          width: 20,\n          alt: \"Compass\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: \"13px\"\n          },\n          children: \"Compass\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), isModalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n        show: isModalOpen,\n        handleClose: handleCloseModal,\n        chartData: chartData,\n        chartType: chartType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n};\n_s(MapContainer, \"hwS3/LGCvwitS8KWxrY2BCLcRoo=\");\n_c = MapContainer;\nexport default MapContainer;\nvar _c;\n$RefreshReg$(_c, \"MapContainer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","L","campass","Modal","jsxDEV","_jsxDEV","MapContainer","collected_data","_s","locationCoordinates","location_coordinates","device_values","mapRef","mapInstance","legendItems","setLegendItems","scrollerRef","isModalOpen","setIsModalOpen","chartData","setChartData","chartType","setChartType","handleWheel","event","preventDefault","current","scrollLeft","deltaY","scroller","addEventListener","passive","removeEventListener","_locationCoordinates$","_device_values$moistu","_locationCoordinates$2","remove","map","setView","tileLayer","maxZoom","minZoom","addTo","colorMap","moisture","valve","npk","farmlandCoordinates","farm_coordinates","coord","lat","lon","split","Number","length","polygon","color","bindPopup","moistureValuesMap","Map","moisture_device_value","forEach","section_device_id","moisture_value","set","legendSensors","Set","uniqueDeviceMarkers","section_device","device","_device$device_locati","device_location","isWithinBounds","device_name","moistureValue","get","moistureRadius","circle","radius","fillColor","fillOpacity","weight","section_name","on","handleSensorClick","add","circleMarker","Array","from","sensor","type","coordinates","getBounds","contains","sensorId","endpoint","response","fetch","data","json","console","error","labels","item","timestamp","Date","toLocaleString","values","valve_status","filter","Boolean","handleCloseModal","ref","className","style","overflow","scrollbarWidth","msOverflowStyle","children","position","border","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","width","height","scale","top","right","backgroundColor","padding","borderRadius","boxShadow","display","alignItems","marginRight","fontSize","charAt","toUpperCase","slice","src","alt","show","handleClose","_c","$RefreshReg$"],"sources":["/home/mcalab3/Desktop/contributor/Smart-Irrigation-and-Fartigation-in-Arecanut-Farm/client/src/pages/User/Components/Farmer/Map.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport campass from \"./WeatherImages/campass.png\";\nimport Modal from \"./Modal\";\n\nconst MapContainer = ({ collected_data }) => {\n  const locationCoordinates = collected_data?.location_coordinates;\n  const device_values = collected_data?.device_values;\n  const mapRef = useRef(null);\n  const mapInstance = useRef(null);\n\n  const [legendItems, setLegendItems] = useState([]);\n  const scrollerRef = useRef(null);\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [chartData, setChartData] = useState(null);\n  const [chartType, setChartType] = useState(\"line\");\n\n  // Horizontal scrolling\n  useEffect(() => {\n    const handleWheel = (event) => {\n      event.preventDefault();\n      if (scrollerRef.current) {\n        scrollerRef.current.scrollLeft += event.deltaY;\n      }\n    };\n    const scroller = scrollerRef.current;\n    if (scroller) {\n      scroller.addEventListener(\"wheel\", handleWheel, { passive: false });\n    }\n    return () => {\n      if (scroller) {\n        scroller.removeEventListener(\"wheel\", handleWheel);\n      }\n    };\n  }, []);\n\n  // Initialize the map and markers\n  useEffect(() => {\n    if (!locationCoordinates || !device_values || !mapRef.current) return;\n\n    if (mapInstance.current) {\n      mapInstance.current.remove();\n    }\n\n    mapInstance.current = L.map(mapRef.current).setView([16.22525, 74.8424], 16);\n    L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n      maxZoom: 27,\n      minZoom: 2,\n    }).addTo(mapInstance.current);\n\n    const colorMap = {\n      moisture: \"blue\",\n      valve: \"red\",\n      npk: \"orange\",\n    };\n\n    // Draw farmland area\n    const farmlandCoordinates = locationCoordinates.farm_coordinates?.map((coord) => {\n      const [lat, lon] = coord.split(\",\").map(Number);\n      return [lat, lon];\n    }) || [];\n\n    if (farmlandCoordinates.length > 0) {\n      L.polygon(farmlandCoordinates, { color: \"green\" })\n        .addTo(mapInstance.current)\n        .bindPopup(\"Farmland Area\");\n    }\n\n    // Prepare device markers\n    const moistureValuesMap = new Map();\n    device_values?.moisture_device_value?.forEach(({ section_device_id, moisture_value }) => {\n      moistureValuesMap.set(section_device_id, moisture_value);\n    });\n\n    const legendSensors = new Set();\n    const uniqueDeviceMarkers = [];\n    locationCoordinates.section_device?.forEach((device) => {\n      const [lat, lon] = device.device_location?.split(\",\").map(Number) || [];\n      if (!lat || !lon) return;\n\n      if (isWithinBounds([lat, lon], farmlandCoordinates)) {\n        if (device.device_name === \"moisture\") {\n          const moistureValue = moistureValuesMap.get(device.section_device_id) || 0;\n          const moistureRadius = moistureValue * 10; // Scale radius\n          L.circle([lat, lon], {\n            radius: moistureRadius,\n            fillColor: colorMap.moisture,\n            color: colorMap.moisture,\n            fillOpacity: 0.4,\n            weight: 1,\n          })\n            .bindPopup(`Moisture Sensor in ${device.section_name}<br/>Value: ${moistureValue}`)\n            .on(\"click\", () => handleSensorClick(device.section_device_id, \"moisture\"))\n            .addTo(mapInstance.current);\n\n          legendSensors.add(\"moisture\");\n        } else if (device.device_name === \"valve\") {\n          L.circleMarker([lat, lon], {\n            radius: 8,\n            fillColor: colorMap.valve,\n            color: colorMap.valve,\n            fillOpacity: 0.8,\n            weight: 2,\n          })\n            .bindPopup(`Valve in ${device.section_name}`)\n            .on(\"click\", () => handleSensorClick(device.section_device_id, \"valve\"))\n            .addTo(mapInstance.current);\n\n          legendSensors.add(\"valve\");\n        } else if (device.device_name === \"npk\") {\n          L.circleMarker([lat, lon], {\n            radius: 8,\n            fillColor: colorMap.npk,\n            color: colorMap.npk,\n            fillOpacity: 0.8,\n            weight: 2,\n          })\n            .bindPopup(`NPK Sensor in ${device.section_name}`)\n            .addTo(mapInstance.current);\n\n          legendSensors.add(\"npk\");\n        }\n      }\n    });\n\n    // Update legend\n    setLegendItems(\n      Array.from(legendSensors).map((sensor) => ({\n        type: sensor,\n        color: colorMap[sensor],\n      }))\n    );\n  }, [locationCoordinates, device_values]);\n\n  const isWithinBounds = (coordinates, farmlandCoordinates) => {\n    const polygon = L.polygon(farmlandCoordinates);\n    return polygon.getBounds().contains(coordinates);\n  };\n\n  const handleSensorClick = async (sensorId, type) => {\n    const endpoint = type === \"moisture\" ? `/farmer/farm/moisture/${sensorId}` : `/farmer/farm/valve/${sensorId}`;\n    try {\n      const response = await fetch(endpoint);\n      const data = await response.json();\n\n      if (data.length === 0) {\n        console.error(`No data available for the selected ${type} sensor`);\n        return;\n      }\n\n      const labels = data.map((item) => (item.timestamp ? new Date(item.timestamp).toLocaleString() : null));\n      const values = type === \"moisture\" ? data.map((item) => item.moisture_value) : data.map((item) => item.valve_status);\n\n      setChartData({\n        labels: labels.filter(Boolean),\n        values: values.filter(Boolean),\n      });\n      setChartType(type === \"moisture\" ? \"line\" : \"timeline\");\n      setIsModalOpen(true);\n    } catch (error) {\n      console.error(`Error fetching ${type} data:`, error);\n    }\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setChartData(null);\n  };\n\n  return (\n    <div ref={scrollerRef} className=\"borderring p-0\" style={{ overflow: \"hidden\", scrollbarWidth: \"none\", msOverflowStyle: \"none\" }}>\n      <div className=\"borderring\" style={{ position: \"relative\", border: \"none\" }}>\n        <h6 className=\"text-secondary\" style={{ zIndex: 2, position: \"relative\" }}>Field Overview</h6>\n        <div ref={mapRef} style={{ width: \"100%\", height: \"445px\", scale: \"1.45\", overflow: \"hidden\", position: \"relative\" }}></div>\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"10px\",\n            right: \"10px\",\n            backgroundColor: \"white\",\n            padding: \"6px\",\n            borderRadius: \"5px\",\n            boxShadow: \"0 0 5px rgba(0,0,0,0.5)\",\n            zIndex: 10,\n          }}\n        >\n          {legendItems.map((item) => (\n            <div key={item.type} style={{ display: \"flex\", alignItems: \"center\" }}>\n              <div\n                style={{\n                  width: \"10px\",\n                  height: \"10px\",\n                  backgroundColor: item.color,\n                  marginRight: \"5px\",\n                }}\n              ></div>\n              <span style={{ fontSize: \"13px\" }}>{item.type.charAt(0).toUpperCase() + item.type.slice(1)}</span>\n            </div>\n          ))}\n          <img src={campass} width={20} alt=\"Compass\" />\n          <span style={{ fontSize: \"13px\" }}>Compass</span>\n        </div>\n        {isModalOpen && <Modal show={isModalOpen} handleClose={handleCloseModal} chartData={chartData} chartType={chartType} />}\n      </div>\n    </div>\n  );\n};\n\nexport default MapContainer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/mcalab3/Desktop/contributor/Smart-Irrigation-and-Fartigation-in-Arecanut-Farm/client/src/pages/User/Components/Farmer/Modal.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { Modal as BootstrapModal } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport 'chartjs-adapter-date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Modal = ({\n  show,\n  handleClose,\n  chartData,\n  chartType\n}) => {\n  _s();\n  // Common dataset structure for the line chart\n  const data = {\n    labels: chartData.labels,\n    datasets: [{\n      label: chartType === 'timeline' ? 'Timeline Data' : 'Line Chart Data',\n      data: chartData.values,\n      fill: false,\n      backgroundColor: 'rgba(75, 192, 192, 1)',\n      borderColor: 'rgba(75, 192, 192, 0.2)'\n    }]\n  };\n\n  // Customize options for each chart type (line chart or timeline)\n  const options = {\n    scales: {\n      x: chartType === 'timeline' ? {\n        type: 'time',\n        // Time scale for timeline chart\n        time: {\n          unit: 'day' // Display by day for timeline (can adjust to 'month', 'hour', etc.)\n        },\n        title: {\n          display: true,\n          text: 'Date'\n        }\n      } : {\n        beginAtZero: true // Standard line chart behavior\n      },\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Value'\n        }\n      }\n    },\n    responsive: true,\n    maintainAspectRatio: false\n  };\n\n  // Effect to load Google Charts for timeline chart\n  useEffect(() => {\n    if (show && chartType === 'timeline') {\n      // Dynamically load Google Charts script if it's not already loaded\n      if (!window.google) {\n        const script = document.createElement('script');\n        script.src = \"https://www.gstatic.com/charts/loader.js\";\n        script.type = \"text/javascript\";\n        script.onload = () => {\n          window.google.charts.load(\"current\", {\n            packages: [\"timeline\"]\n          });\n          window.google.charts.setOnLoadCallback(drawTimelineChart);\n        };\n        document.head.appendChild(script);\n      } else {\n        window.google.charts.setOnLoadCallback(drawTimelineChart);\n      }\n    }\n    function drawTimelineChart() {\n      const container = document.getElementById('google-timeline');\n      const chart = new window.google.visualization.Timeline(container);\n      const dataTable = new window.google.visualization.DataTable();\n      dataTable.addColumn({\n        type: 'string',\n        id: 'Term'\n      });\n      dataTable.addColumn({\n        type: 'string',\n        id: 'Name'\n      });\n      dataTable.addColumn({\n        type: 'date',\n        id: 'Start'\n      });\n      dataTable.addColumn({\n        type: 'date',\n        id: 'End'\n      });\n\n      // Sample data for timeline (you can replace with actual data)\n      dataTable.addRows([['1', 'George Washington', new Date(1789, 3, 30), new Date(1797, 2, 4)], ['2', 'John Adams', new Date(1797, 2, 4), new Date(1801, 2, 4)], ['3', 'Thomas Jefferson', new Date(1801, 2, 4), new Date(1809, 2, 4)]]);\n      chart.draw(dataTable);\n    }\n    return () => {\n      // Clean up to avoid multiple script injections\n      const script = document.querySelector('script[src=\"https://www.gstatic.com/charts/loader.js\"]');\n      if (script) {\n        script.remove();\n      }\n    };\n  }, [show, chartType]);\n  return /*#__PURE__*/_jsxDEV(BootstrapModal, {\n    show: show,\n    onHide: handleClose,\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(BootstrapModal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(BootstrapModal.Title, {\n        children: chartType === 'timeline' ? 'Timeline Chart' : 'Line Chart'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BootstrapModal.Body, {\n      children: chartType === 'timeline' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"google-timeline\",\n        style: {\n          height: '300px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Line, {\n        data: data,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(Modal, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","useEffect","Modal","BootstrapModal","Line","jsxDEV","_jsxDEV","show","handleClose","chartData","chartType","_s","data","labels","datasets","label","values","fill","backgroundColor","borderColor","options","scales","x","type","time","unit","title","display","text","beginAtZero","y","responsive","maintainAspectRatio","window","google","script","document","createElement","src","onload","charts","load","packages","setOnLoadCallback","drawTimelineChart","head","appendChild","container","getElementById","chart","visualization","Timeline","dataTable","DataTable","addColumn","id","addRows","Date","draw","querySelector","remove","onHide","centered","children","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","style","height","_c","$RefreshReg$"],"sources":["/home/mcalab3/Desktop/contributor/Smart-Irrigation-and-Fartigation-in-Arecanut-Farm/client/src/pages/User/Components/Farmer/Modal.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { Modal as BootstrapModal } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport 'chartjs-adapter-date-fns';\n\nconst Modal = ({ show, handleClose, chartData, chartType }) => {\n  // Common dataset structure for the line chart\n  const data = {\n    labels: chartData.labels,\n    datasets: [\n      {\n        label: chartType === 'timeline' ? 'Timeline Data' : 'Line Chart Data',\n        data: chartData.values,\n        fill: false,\n        backgroundColor: 'rgba(75, 192, 192, 1)',\n        borderColor: 'rgba(75, 192, 192, 0.2)',\n      },\n    ],\n  };\n\n  // Customize options for each chart type (line chart or timeline)\n  const options = {\n    scales: {\n      x: chartType === 'timeline'\n        ? {\n            type: 'time', // Time scale for timeline chart\n            time: {\n              unit: 'day', // Display by day for timeline (can adjust to 'month', 'hour', etc.)\n            },\n            title: {\n              display: true,\n              text: 'Date',\n            },\n          }\n        : {\n            beginAtZero: true, // Standard line chart behavior\n          },\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Value',\n        },\n      },\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n  };\n\n  // Effect to load Google Charts for timeline chart\n  useEffect(() => {\n    if (show && chartType === 'timeline') {\n      // Dynamically load Google Charts script if it's not already loaded\n      if (!window.google) {\n        const script = document.createElement('script');\n        script.src = \"https://www.gstatic.com/charts/loader.js\";\n        script.type = \"text/javascript\";\n        script.onload = () => {\n          window.google.charts.load(\"current\", { packages: [\"timeline\"] });\n          window.google.charts.setOnLoadCallback(drawTimelineChart);\n        };\n        document.head.appendChild(script);\n      } else {\n        window.google.charts.setOnLoadCallback(drawTimelineChart);\n      }\n    }\n\n    function drawTimelineChart() {\n      const container = document.getElementById('google-timeline');\n      const chart = new window.google.visualization.Timeline(container);\n      const dataTable = new window.google.visualization.DataTable();\n\n      dataTable.addColumn({ type: 'string', id: 'Term' });\n      dataTable.addColumn({ type: 'string', id: 'Name' });\n      dataTable.addColumn({ type: 'date', id: 'Start' });\n      dataTable.addColumn({ type: 'date', id: 'End' });\n\n      // Sample data for timeline (you can replace with actual data)\n      dataTable.addRows([\n        [ '1', 'George Washington', new Date(1789, 3, 30), new Date(1797, 2, 4) ],\n        [ '2', 'John Adams', new Date(1797, 2, 4), new Date(1801, 2, 4) ],\n        [ '3', 'Thomas Jefferson', new Date(1801, 2, 4), new Date(1809, 2, 4) ],\n      ]);\n\n      chart.draw(dataTable);\n    }\n\n    return () => {\n      // Clean up to avoid multiple script injections\n      const script = document.querySelector('script[src=\"https://www.gstatic.com/charts/loader.js\"]');\n      if (script) {\n        script.remove();\n      }\n    };\n  }, [show, chartType]);\n\n  return (\n    <BootstrapModal show={show} onHide={handleClose} centered>\n      <BootstrapModal.Header closeButton>\n        <BootstrapModal.Title>{chartType === 'timeline' ? 'Timeline Chart' : 'Line Chart'}</BootstrapModal.Title>\n      </BootstrapModal.Header>\n      <BootstrapModal.Body>\n        {chartType === 'timeline' ? (\n          <div id=\"google-timeline\" style={{ height: '300px' }}></div>\n        ) : (\n          <Line data={data} options={options} />\n        )}\n      </BootstrapModal.Body>\n    </BootstrapModal>\n  );\n};\n\nexport default Modal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/mcalab3/Desktop/contributor/Smart-Irrigation-and-Fartigation-in-Arecanut-Farm/client/src/pages/User/Components/Farmer/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport campass from \"./WeatherImages/campass.png\";\nimport Modal from \"./Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapContainer = ({\n  collected_data\n}) => {\n  _s();\n  const locationCoordinates = collected_data === null || collected_data === void 0 ? void 0 : collected_data.location_coordinates;\n  const device_values = collected_data === null || collected_data === void 0 ? void 0 : collected_data.device_values;\n  const mapRef = useRef(null);\n  const mapInstance = useRef(null);\n  const [legendItems, setLegendItems] = useState([]);\n  const scrollerRef = useRef(null);\n\n  // State for modal and chart data\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [chartData, setChartData] = useState(null);\n  const [chartType, setChartType] = useState(\"line\");\n\n  // Horizontal scrolling for the map container\n  useEffect(() => {\n    const handleWheel = event => {\n      event.preventDefault();\n      if (scrollerRef.current) {\n        scrollerRef.current.scrollLeft += event.deltaY;\n      }\n    };\n    const scroller = scrollerRef.current;\n    if (scroller) {\n      scroller.addEventListener(\"wheel\", handleWheel, {\n        passive: false\n      });\n    }\n    return () => {\n      if (scroller) {\n        scroller.removeEventListener(\"wheel\", handleWheel);\n      }\n    };\n  }, []);\n\n  // Initialize the map and markers\n  useEffect(() => {\n    var _locationCoordinates$, _device_values$moistu, _locationCoordinates$2;\n    if (!locationCoordinates || !device_values || !mapRef.current) return;\n\n    // Remove the old map instance if it exists\n    if (mapInstance.current) {\n      mapInstance.current.remove();\n    }\n    mapInstance.current = L.map(mapRef.current).setView([16.22525, 74.8424], 16);\n    L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n      maxZoom: 27,\n      minZoom: 2\n    }).addTo(mapInstance.current);\n\n    // Color mapping for sensors\n    const colorMap = {\n      farmland: \"green\",\n      valve: \"red\",\n      moisture: \"blue\",\n      npk: \"orange\"\n    };\n\n    // Draw farmland boundaries\n    const farmlandCoordinates = ((_locationCoordinates$ = locationCoordinates.farm_coordinates) === null || _locationCoordinates$ === void 0 ? void 0 : _locationCoordinates$.map(coord => {\n      const [lat, lon] = coord.split(\",\").map(Number);\n      return [lat, lon];\n    })) || [];\n    if (farmlandCoordinates.length > 0) {\n      const farmlandLayer = L.polygon(farmlandCoordinates, {\n        color: colorMap.farmland\n      }).addTo(mapInstance.current);\n      farmlandLayer.bindPopup(\"Farmland Area\");\n    }\n\n    // Prepare moisture values\n    const moistureValuesMap = new Map();\n    device_values === null || device_values === void 0 ? void 0 : (_device_values$moistu = device_values.moisture_device_value) === null || _device_values$moistu === void 0 ? void 0 : _device_values$moistu.forEach(({\n      section_device_id,\n      moisture_value\n    }) => {\n      moistureValuesMap.set(section_device_id, moisture_value);\n    });\n\n    // Add device markers\n    const uniqueDeviceMarkers = [];\n    (_locationCoordinates$2 = locationCoordinates.section_device) === null || _locationCoordinates$2 === void 0 ? void 0 : _locationCoordinates$2.forEach(device => {\n      var _device$device_locati;\n      const [lat, lon] = ((_device$device_locati = device.device_location) === null || _device$device_locati === void 0 ? void 0 : _device$device_locati.split(\",\").map(Number)) || [];\n      if (lat && lon && isWithinBounds([lat, lon], farmlandCoordinates)) {\n        if (device.device_name === \"moisture\") {\n          const moistureValue = moistureValuesMap.get(device.section_device_id) || 0;\n          const moistureRadius = moistureValue * 0.05; // Adjust radius as needed\n          const moistureCircle = L.circle([lat, lon], {\n            radius: moistureRadius,\n            fillColor: colorMap.moisture,\n            color: colorMap.moisture,\n            fillOpacity: 0.4,\n            weight: 1\n          }).bindPopup(`Moisture Sensor in ${device.section_name}<br/>Value: ${moistureValue}`).on(\"click\", () => handleMoistureSensorClick(device.section_device_id));\n          uniqueDeviceMarkers.push(moistureCircle);\n        }\n        if (device.device_name === \"valve\") {\n          const valveMarker = L.circleMarker([lat, lon], {\n            radius: 8,\n            fillColor: colorMap.valve,\n            color: colorMap.valve,\n            fillOpacity: 0.8,\n            weight: 2\n          }).bindPopup(`Valve in ${device.section_name}`).on(\"click\", () => handleValveClick(device.section_device_id));\n          uniqueDeviceMarkers.push(valveMarker);\n        }\n        if (device.device_name === \"npk\") {\n          const npkMarker = L.circleMarker([lat, lon], {\n            radius: 6,\n            fillColor: colorMap.npk,\n            color: colorMap.npk,\n            fillOpacity: 0.8,\n            weight: 2\n          }).bindPopup(`NPK Sensor in ${device.section_name}`);\n          uniqueDeviceMarkers.push(npkMarker);\n        }\n      }\n    });\n    uniqueDeviceMarkers.forEach(marker => marker.addTo(mapInstance.current));\n\n    // Update legend\n    const legendData = [{\n      type: \"moisture\",\n      color: colorMap.moisture\n    }, {\n      type: \"valve\",\n      color: colorMap.valve\n    }, {\n      type: \"npk\",\n      color: colorMap.npk\n    }];\n    setLegendItems(legendData);\n  }, [locationCoordinates, device_values]);\n  const isWithinBounds = (coordinates, farmlandCoordinates) => {\n    const polygon = L.polygon(farmlandCoordinates);\n    return polygon.getBounds().contains(coordinates);\n  };\n  const handleMoistureSensorClick = async sensorId => {\n    // Fetch moisture sensor data logic\n  };\n  const handleValveClick = async valveId => {\n    // Fetch valve data logic\n  };\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setChartData(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: scrollerRef,\n    className: \"borderring p-0\",\n    style: {\n      overflow: \"hidden\",\n      scrollbarWidth: \"none\",\n      msOverflowStyle: \"none\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"borderring\",\n      style: {\n        position: \"relative\",\n        border: \"none\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"text-secondary\",\n        style: {\n          zIndex: 2,\n          position: \"relative\",\n          top: \"0px\",\n          left: \"0px\"\n        },\n        children: \"Field Overview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: mapRef,\n        style: {\n          width: \"100%\",\n          height: \"445px\",\n          overflow: \"hidden\",\n          position: \"relative\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"absolute\",\n          top: \"10px\",\n          right: \"10px\",\n          backgroundColor: \"white\",\n          padding: \"6px\",\n          borderRadius: \"5px\",\n          boxShadow: \"0 0 5px rgba(0,0,0,0.5)\",\n          zIndex: 10\n        },\n        children: [legendItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"10px\",\n              height: \"10px\",\n              backgroundColor: item.color,\n              marginRight: \"5px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: \"13px\"\n            },\n            children: item.type.charAt(0).toUpperCase() + item.type.slice(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this)]\n        }, item.type, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: campass,\n          width: 20,\n          alt: \"Compass\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: \"13px\"\n          },\n          children: \"Compass\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), isModalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n        show: isModalOpen,\n        handleClose: handleCloseModal,\n        chartData: chartData,\n        chartType: chartType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n};\n_s(MapContainer, \"hwS3/LGCvwitS8KWxrY2BCLcRoo=\");\n_c = MapContainer;\nexport default MapContainer;\nvar _c;\n$RefreshReg$(_c, \"MapContainer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","L","campass","Modal","jsxDEV","_jsxDEV","MapContainer","collected_data","_s","locationCoordinates","location_coordinates","device_values","mapRef","mapInstance","legendItems","setLegendItems","scrollerRef","isModalOpen","setIsModalOpen","chartData","setChartData","chartType","setChartType","handleWheel","event","preventDefault","current","scrollLeft","deltaY","scroller","addEventListener","passive","removeEventListener","_locationCoordinates$","_device_values$moistu","_locationCoordinates$2","remove","map","setView","tileLayer","maxZoom","minZoom","addTo","colorMap","farmland","valve","moisture","npk","farmlandCoordinates","farm_coordinates","coord","lat","lon","split","Number","length","farmlandLayer","polygon","color","bindPopup","moistureValuesMap","Map","moisture_device_value","forEach","section_device_id","moisture_value","set","uniqueDeviceMarkers","section_device","device","_device$device_locati","device_location","isWithinBounds","device_name","moistureValue","get","moistureRadius","moistureCircle","circle","radius","fillColor","fillOpacity","weight","section_name","on","handleMoistureSensorClick","push","valveMarker","circleMarker","handleValveClick","npkMarker","marker","legendData","type","coordinates","getBounds","contains","sensorId","valveId","handleCloseModal","ref","className","style","overflow","scrollbarWidth","msOverflowStyle","children","position","border","zIndex","top","left","fileName","_jsxFileName","lineNumber","columnNumber","width","height","right","backgroundColor","padding","borderRadius","boxShadow","item","display","alignItems","marginRight","fontSize","charAt","toUpperCase","slice","src","alt","show","handleClose","_c","$RefreshReg$"],"sources":["/home/mcalab3/Desktop/contributor/Smart-Irrigation-and-Fartigation-in-Arecanut-Farm/client/src/pages/User/Components/Farmer/Map.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport campass from \"./WeatherImages/campass.png\";\nimport Modal from \"./Modal\";\n\nconst MapContainer = ({ collected_data }) => {\n  const locationCoordinates = collected_data?.location_coordinates;\n  const device_values = collected_data?.device_values;\n  const mapRef = useRef(null);\n  const mapInstance = useRef(null);\n  const [legendItems, setLegendItems] = useState([]);\n  const scrollerRef = useRef(null);\n\n  // State for modal and chart data\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [chartData, setChartData] = useState(null);\n  const [chartType, setChartType] = useState(\"line\");\n\n  // Horizontal scrolling for the map container\n  useEffect(() => {\n    const handleWheel = (event) => {\n      event.preventDefault();\n      if (scrollerRef.current) {\n        scrollerRef.current.scrollLeft += event.deltaY;\n      }\n    };\n    const scroller = scrollerRef.current;\n    if (scroller) {\n      scroller.addEventListener(\"wheel\", handleWheel, { passive: false });\n    }\n    return () => {\n      if (scroller) {\n        scroller.removeEventListener(\"wheel\", handleWheel);\n      }\n    };\n  }, []);\n\n  // Initialize the map and markers\n  useEffect(() => {\n    if (!locationCoordinates || !device_values || !mapRef.current) return;\n\n    // Remove the old map instance if it exists\n    if (mapInstance.current) {\n      mapInstance.current.remove();\n    }\n\n    mapInstance.current = L.map(mapRef.current).setView([16.22525, 74.8424], 16);\n\n    L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n      maxZoom: 27,\n      minZoom: 2,\n    }).addTo(mapInstance.current);\n\n    // Color mapping for sensors\n    const colorMap = {\n      farmland: \"green\",\n      valve: \"red\",\n      moisture: \"blue\",\n      npk: \"orange\",\n    };\n\n    // Draw farmland boundaries\n    const farmlandCoordinates = locationCoordinates.farm_coordinates?.map(\n      (coord) => {\n        const [lat, lon] = coord.split(\",\").map(Number);\n        return [lat, lon];\n      }\n    ) || [];\n    if (farmlandCoordinates.length > 0) {\n      const farmlandLayer = L.polygon(farmlandCoordinates, {\n        color: colorMap.farmland,\n      }).addTo(mapInstance.current);\n      farmlandLayer.bindPopup(\"Farmland Area\");\n    }\n\n    // Prepare moisture values\n    const moistureValuesMap = new Map();\n    device_values?.moisture_device_value?.forEach(({ section_device_id, moisture_value }) => {\n      moistureValuesMap.set(section_device_id, moisture_value);\n    });\n\n    // Add device markers\n    const uniqueDeviceMarkers = [];\n    locationCoordinates.section_device?.forEach((device) => {\n      const [lat, lon] = device.device_location?.split(\",\").map(Number) || [];\n      if (lat && lon && isWithinBounds([lat, lon], farmlandCoordinates)) {\n        if (device.device_name === \"moisture\") {\n          const moistureValue = moistureValuesMap.get(device.section_device_id) || 0;\n          const moistureRadius = moistureValue * 0.05; // Adjust radius as needed\n          const moistureCircle = L.circle([lat, lon], {\n            radius: moistureRadius,\n            fillColor: colorMap.moisture,\n            color: colorMap.moisture,\n            fillOpacity: 0.4,\n            weight: 1,\n          })\n            .bindPopup(\n              `Moisture Sensor in ${device.section_name}<br/>Value: ${moistureValue}`\n            )\n            .on(\"click\", () => handleMoistureSensorClick(device.section_device_id));\n          uniqueDeviceMarkers.push(moistureCircle);\n        }\n\n        if (device.device_name === \"valve\") {\n          const valveMarker = L.circleMarker([lat, lon], {\n            radius: 8,\n            fillColor: colorMap.valve,\n            color: colorMap.valve,\n            fillOpacity: 0.8,\n            weight: 2,\n          })\n            .bindPopup(`Valve in ${device.section_name}`)\n            .on(\"click\", () => handleValveClick(device.section_device_id));\n          uniqueDeviceMarkers.push(valveMarker);\n        }\n\n        if (device.device_name === \"npk\") {\n          const npkMarker = L.circleMarker([lat, lon], {\n            radius: 6,\n            fillColor: colorMap.npk,\n            color: colorMap.npk,\n            fillOpacity: 0.8,\n            weight: 2,\n          }).bindPopup(`NPK Sensor in ${device.section_name}`);\n          uniqueDeviceMarkers.push(npkMarker);\n        }\n      }\n    });\n\n    uniqueDeviceMarkers.forEach((marker) => marker.addTo(mapInstance.current));\n\n    // Update legend\n    const legendData = [\n      { type: \"moisture\", color: colorMap.moisture },\n      { type: \"valve\", color: colorMap.valve },\n      { type: \"npk\", color: colorMap.npk },\n    ];\n    setLegendItems(legendData);\n  }, [locationCoordinates, device_values]);\n\n  const isWithinBounds = (coordinates, farmlandCoordinates) => {\n    const polygon = L.polygon(farmlandCoordinates);\n    return polygon.getBounds().contains(coordinates);\n  };\n\n  const handleMoistureSensorClick = async (sensorId) => {\n    // Fetch moisture sensor data logic\n  };\n\n  const handleValveClick = async (valveId) => {\n    // Fetch valve data logic\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setChartData(null);\n  };\n\n  return (\n    <div ref={scrollerRef} className=\"borderring p-0\" style={{ overflow: \"hidden\", scrollbarWidth: \"none\", msOverflowStyle: \"none\" }}>\n      <div className=\"borderring\" style={{ position: \"relative\", border: \"none\" }}>\n        <h6 className=\"text-secondary\" style={{ zIndex: 2, position: \"relative\", top: \"0px\", left: \"0px\" }}>Field Overview</h6>\n        <div ref={mapRef} style={{ width: \"100%\", height: \"445px\", overflow: \"hidden\", position: \"relative\" }}></div>\n        <div style={{ position: \"absolute\", top: \"10px\", right: \"10px\", backgroundColor: \"white\", padding: \"6px\", borderRadius: \"5px\", boxShadow: \"0 0 5px rgba(0,0,0,0.5)\", zIndex: 10 }}>\n          {legendItems.map((item) => (\n            <div key={item.type} style={{ display: \"flex\", alignItems: \"center\" }}>\n              <div style={{ width: \"10px\", height: \"10px\", backgroundColor: item.color, marginRight: \"5px\" }}></div>\n              <span style={{ fontSize: \"13px\" }}>{item.type.charAt(0).toUpperCase() + item.type.slice(1)}</span>\n            </div>\n          ))}\n          <img src={campass} width={20} alt=\"Compass\" />\n          <span style={{ fontSize: \"13px\" }}>Compass</span>\n        </div>\n        {isModalOpen && (\n          <Modal show={isModalOpen} handleClose={handleCloseModal} chartData={chartData} chartType={chartType} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MapContainer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
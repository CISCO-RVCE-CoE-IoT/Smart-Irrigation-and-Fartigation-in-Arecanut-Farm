{"ast":null,"code":"var _jsxFileName = \"/home/mcalab3/Desktop/contributor/Smart-Irrigation-and-Fartigation-in-Arecanut-Farm/client/src/pages/User/Components/Farmer/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport L from \"leaflet\";\nimport 'leaflet/dist/leaflet.css';\nimport campass from './WeatherImages/campass.png';\nimport { Line } from \"react-chartjs-2\";\nimport Modal from \"./Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapContainer = ({\n  collected_data\n}) => {\n  _s();\n  const locationCoordinates = collected_data === null || collected_data === void 0 ? void 0 : collected_data.location_coordinates;\n  const device_values = collected_data === null || collected_data === void 0 ? void 0 : collected_data.device_values;\n  const mapRef = useRef(null);\n  const mapInstance = useRef(null);\n  const [legendItems, setLegendItems] = useState([]);\n  const scrollerRef = useRef(null);\n\n  // State for modal and chart data\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [chartData, setChartData] = useState({\n    labels: [],\n    values: []\n  });\n\n  // Horizontal scrolling for the map container\n  useEffect(() => {\n    const handleWheel = event => {\n      event.preventDefault();\n      if (scrollerRef.current) {\n        scrollerRef.current.scrollLeft += event.deltaY;\n      }\n    };\n    const scroller = scrollerRef.current;\n    if (scroller) {\n      scroller.addEventListener(\"wheel\", handleWheel, {\n        passive: false\n      });\n    }\n    return () => {\n      if (scroller) {\n        scroller.removeEventListener(\"wheel\", handleWheel);\n      }\n    };\n  }, []);\n\n  // Initialize the map and markers\n  useEffect(() => {\n    var _locationCoordinates$, _device_values$moistu, _locationCoordinates$2;\n    if (!locationCoordinates || !device_values || !mapRef.current) return;\n    if (mapInstance.current) {\n      mapInstance.current.remove();\n    }\n    mapInstance.current = L.map(mapRef).setView([16.22525, 74.8424], 16);\n    L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n      maxZoom: 27,\n      minZoom: 2\n    }).addTo(mapInstance.current);\n    const colorMap = {\n      farmland: \"green\",\n      valve: \"orange\",\n      moisture: \"darkblue\",\n      npk: \"red\"\n    };\n    const farmlandCoordinates = ((_locationCoordinates$ = locationCoordinates.farm_coordinates) === null || _locationCoordinates$ === void 0 ? void 0 : _locationCoordinates$.map(coord => {\n      const [lat, lon] = coord.split(\",\").map(Number);\n      return [lat, lon];\n    })) || [];\n    if (farmlandCoordinates.length > 0) {\n      const farmlandLayer = L.polygon(farmlandCoordinates, {\n        color: colorMap.farmland\n      }).addTo(mapInstance.current);\n      farmlandLayer.bindPopup(\"Farmland Area\");\n    }\n    const moistureValuesMap = new Map();\n    device_values === null || device_values === void 0 ? void 0 : (_device_values$moistu = device_values.moisture_device_value) === null || _device_values$moistu === void 0 ? void 0 : _device_values$moistu.forEach(({\n      section_device_id,\n      moisture_value\n    }) => {\n      moistureValuesMap.set(section_device_id, moisture_value);\n    });\n    const uniqueDeviceMarkers = [];\n    (_locationCoordinates$2 = locationCoordinates.section_device) === null || _locationCoordinates$2 === void 0 ? void 0 : _locationCoordinates$2.forEach(device => {\n      var _device$device_locati;\n      const [lat, lon] = ((_device$device_locati = device.device_location) === null || _device$device_locati === void 0 ? void 0 : _device$device_locati.split(\",\").map(Number)) || [];\n      if (lat && lon && isWithinBounds([lat, lon], farmlandCoordinates)) {\n        if (device.device_name === \"moisture\") {\n          const moistureValue = moistureValuesMap.get(device.section_device_id) || 0;\n          const moistureRadius = moistureValue * 0.05;\n          const moistureCircle = L.circle([lat, lon], {\n            radius: moistureRadius,\n            fillColor: colorMap.moisture,\n            color: colorMap.moisture,\n            fillOpacity: 0.4,\n            weight: 1\n          }).bindPopup(`Moisture Sensor in ${device.section_name}<br/>Value: ${moistureValue}`).on(\"click\", () => handleMoistureSensorClick(device.section_device_id));\n          uniqueDeviceMarkers.push(moistureCircle);\n        }\n      }\n    });\n    uniqueDeviceMarkers.forEach(marker => marker.addTo(mapInstance.current));\n    const bounds = L.latLngBounds(farmlandCoordinates);\n    uniqueDeviceMarkers.forEach(marker => bounds.extend(marker.getLatLng()));\n    mapInstance.current.fitBounds(bounds);\n    const legendData = [{\n      type: \"moisture\",\n      color: colorMap.moisture\n    }, {\n      type: \"valve\",\n      color: \"orange\"\n    }, {\n      type: \"npk\",\n      color: colorMap.npk\n    }];\n    setLegendItems(legendData);\n  }, [locationCoordinates, device_values]);\n  const isWithinBounds = (coordinates, farmlandCoordinates) => {\n    const polygon = L.polygon(farmlandCoordinates);\n    return polygon.getBounds().contains(coordinates);\n  };\n  const handleMoistureSensorClick = async sensorId => {\n    try {\n      const response = await fetch(`/farmer/farm/moisture/${sensorId}`);\n      const data = await response.json();\n      const labels = data.map(item => item.timestamp);\n      const values = data.map(item => item.moisture_value);\n      setChartData({\n        labels,\n        values\n      });\n      setIsModalOpen(true);\n    } catch (error) {\n      console.error(\"Error fetching moisture data:\", error);\n    }\n  };\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setChartData({\n      labels: [],\n      values: []\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: scrollerRef,\n    className: \"borderring p-0\",\n    style: {\n      overflow: \"hidden\",\n      scrollbarWidth: \"none\",\n      msOverflowStyle: \"none\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"borderring\",\n      style: {\n        position: \"relative\",\n        border: 'none'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"text-secondary\",\n        style: {\n          zIndex: 2,\n          position: \"relative\",\n          top: '0px',\n          left: '0px'\n        },\n        children: \"Field Overview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: mapRef,\n        style: {\n          width: \"100%\",\n          height: \"445px\",\n          scale: \"1.45\",\n          overflow: \"hidden\",\n          position: \"relative\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"absolute\",\n          top: \"10px\",\n          right: \"10px\",\n          backgroundColor: \"white\",\n          padding: \"6px\",\n          borderRadius: \"5px\",\n          boxShadow: \"0 0 5px rgba(0,0,0,0.5)\",\n          zIndex: 10\n        },\n        children: [legendItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"10px\",\n              height: \"10px\",\n              backgroundColor: item.color,\n              marginRight: \"5px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: '13px'\n            },\n            children: item.type.charAt(0).toUpperCase() + item.type.slice(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 29\n          }, this)]\n        }, item.type, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: campass,\n          width: 20,\n          alt: \"Compass\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '13px'\n          },\n          children: \"Compass\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 68\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), isModalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n        show: isModalOpen,\n        handleClose: handleCloseModal,\n        chartData: chartData,\n        chartType: \"line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 9\n  }, this);\n};\n_s(MapContainer, \"0PVPm0m+Ir+27iemzYKJEaDxx/Y=\");\n_c = MapContainer;\nexport default MapContainer;\nvar _c;\n$RefreshReg$(_c, \"MapContainer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","L","campass","Line","Modal","jsxDEV","_jsxDEV","MapContainer","collected_data","_s","locationCoordinates","location_coordinates","device_values","mapRef","mapInstance","legendItems","setLegendItems","scrollerRef","isModalOpen","setIsModalOpen","chartData","setChartData","labels","values","handleWheel","event","preventDefault","current","scrollLeft","deltaY","scroller","addEventListener","passive","removeEventListener","_locationCoordinates$","_device_values$moistu","_locationCoordinates$2","remove","map","setView","tileLayer","maxZoom","minZoom","addTo","colorMap","farmland","valve","moisture","npk","farmlandCoordinates","farm_coordinates","coord","lat","lon","split","Number","length","farmlandLayer","polygon","color","bindPopup","moistureValuesMap","Map","moisture_device_value","forEach","section_device_id","moisture_value","set","uniqueDeviceMarkers","section_device","device","_device$device_locati","device_location","isWithinBounds","device_name","moistureValue","get","moistureRadius","moistureCircle","circle","radius","fillColor","fillOpacity","weight","section_name","on","handleMoistureSensorClick","push","marker","bounds","latLngBounds","extend","getLatLng","fitBounds","legendData","type","coordinates","getBounds","contains","sensorId","response","fetch","data","json","item","timestamp","error","console","handleCloseModal","ref","className","style","overflow","scrollbarWidth","msOverflowStyle","children","position","border","zIndex","top","left","fileName","_jsxFileName","lineNumber","columnNumber","width","height","scale","right","backgroundColor","padding","borderRadius","boxShadow","display","alignItems","marginRight","fontSize","charAt","toUpperCase","slice","src","alt","show","handleClose","chartType","_c","$RefreshReg$"],"sources":["/home/mcalab3/Desktop/contributor/Smart-Irrigation-and-Fartigation-in-Arecanut-Farm/client/src/pages/User/Components/Farmer/Map.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport L from \"leaflet\";\nimport 'leaflet/dist/leaflet.css';\nimport campass from './WeatherImages/campass.png';\nimport { Line } from \"react-chartjs-2\";\nimport Modal from \"./Modal\";\n\nconst MapContainer = ({ collected_data }) => {\n    const locationCoordinates = collected_data?.location_coordinates;\n    const device_values = collected_data?.device_values;\n\n    const mapRef = useRef(null);\n    const mapInstance = useRef(null);\n    const [legendItems, setLegendItems] = useState([]);\n    const scrollerRef = useRef(null);\n\n    // State for modal and chart data\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [chartData, setChartData] = useState({\n        labels: [],\n        values: [],\n    });\n\n    // Horizontal scrolling for the map container\n    useEffect(() => {\n        const handleWheel = (event) => {\n            event.preventDefault();\n            if (scrollerRef.current) {\n                scrollerRef.current.scrollLeft += event.deltaY;\n            }\n        };\n\n        const scroller = scrollerRef.current;\n        if (scroller) {\n            scroller.addEventListener(\"wheel\", handleWheel, { passive: false });\n        }\n\n        return () => {\n            if (scroller) {\n                scroller.removeEventListener(\"wheel\", handleWheel);\n            }\n        };\n    }, []);\n\n    // Initialize the map and markers\n    useEffect(() => {\n        if (!locationCoordinates || !device_values || !mapRef.current) return;\n\n        if (mapInstance.current) {\n            mapInstance.current.remove();\n        }\n\n        mapInstance.current = L.map(mapRef).setView([16.22525, 74.8424], 16);\n\n        L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n            maxZoom: 27,\n            minZoom: 2,\n        }).addTo(mapInstance.current);\n\n        const colorMap = {\n            farmland: \"green\",\n            valve: \"orange\",\n            moisture: \"darkblue\",\n            npk: \"red\",\n        };\n\n        const farmlandCoordinates = locationCoordinates.farm_coordinates?.map(coord => {\n            const [lat, lon] = coord.split(\",\").map(Number);\n            return [lat, lon];\n        }) || [];\n\n        if (farmlandCoordinates.length > 0) {\n            const farmlandLayer = L.polygon(farmlandCoordinates, { color: colorMap.farmland }).addTo(mapInstance.current);\n            farmlandLayer.bindPopup(\"Farmland Area\");\n        }\n\n        const moistureValuesMap = new Map();\n        device_values?.moisture_device_value?.forEach(({ section_device_id, moisture_value }) => {\n            moistureValuesMap.set(section_device_id, moisture_value);\n        });\n\n        const uniqueDeviceMarkers = [];\n\n        locationCoordinates.section_device?.forEach(device => {\n            const [lat, lon] = device.device_location?.split(\",\").map(Number) || [];\n            if (lat && lon && isWithinBounds([lat, lon], farmlandCoordinates)) {\n                if (device.device_name === \"moisture\") {\n                    const moistureValue = moistureValuesMap.get(device.section_device_id) || 0;\n                    const moistureRadius = moistureValue * 0.05;\n\n                    const moistureCircle = L.circle([lat, lon], {\n                        radius: moistureRadius,\n                        fillColor: colorMap.moisture,\n                        color: colorMap.moisture,\n                        fillOpacity: 0.4,\n                        weight: 1,\n                    })\n                        .bindPopup(`Moisture Sensor in ${device.section_name}<br/>Value: ${moistureValue}`)\n                        .on(\"click\", () => handleMoistureSensorClick(device.section_device_id));\n                    \n                    uniqueDeviceMarkers.push(moistureCircle);\n                }\n            }\n        });\n\n        uniqueDeviceMarkers.forEach(marker => marker.addTo(mapInstance.current));\n\n        const bounds = L.latLngBounds(farmlandCoordinates);\n        uniqueDeviceMarkers.forEach(marker => bounds.extend(marker.getLatLng()));\n        mapInstance.current.fitBounds(bounds);\n\n        const legendData = [\n            { type: \"moisture\", color: colorMap.moisture },\n            { type: \"valve\", color: \"orange\" },\n            { type: \"npk\", color: colorMap.npk },\n        ];\n        setLegendItems(legendData);\n\n    }, [locationCoordinates, device_values]);\n\n    const isWithinBounds = (coordinates, farmlandCoordinates) => {\n        const polygon = L.polygon(farmlandCoordinates);\n        return polygon.getBounds().contains(coordinates);\n    };\n\n    const handleMoistureSensorClick = async (sensorId) => {\n        try {\n            const response = await fetch(`/farmer/farm/moisture/${sensorId}`);\n            const data = await response.json();\n\n            const labels = data.map(item => item.timestamp);\n            const values = data.map(item => item.moisture_value);\n\n            setChartData({ labels, values });\n            setIsModalOpen(true);\n        } catch (error) {\n            console.error(\"Error fetching moisture data:\", error);\n        }\n    };\n\n    const handleCloseModal = () => {\n        setIsModalOpen(false);\n        setChartData({ labels: [], values: [] });\n    };\n\n    return (\n        <div ref={scrollerRef} className=\"borderring p-0\" style={{ overflow: \"hidden\", scrollbarWidth: \"none\", msOverflowStyle: \"none\" }}>\n            <div className=\"borderring\" style={{ position: \"relative\", border: 'none' }}>\n                <h6 className=\"text-secondary\" style={{ zIndex: 2, position: \"relative\", top: '0px', left: '0px' }}>Field Overview</h6>\n                <div\n                    ref={mapRef}\n                    style={{\n                        width: \"100%\",\n                        height: \"445px\",\n                        scale: \"1.45\",\n                        overflow: \"hidden\",\n                        position: \"relative\"\n                    }}\n                ></div>\n\n                <div style={{\n                    position: \"absolute\",\n                    top: \"10px\",\n                    right: \"10px\",\n                    backgroundColor: \"white\",\n                    padding: \"6px\",\n                    borderRadius: \"5px\",\n                    boxShadow: \"0 0 5px rgba(0,0,0,0.5)\",\n                    zIndex: 10,\n                }}>\n                    {legendItems.map((item) => (\n                        <div key={item.type} style={{ display: \"flex\", alignItems: \"center\" }}>\n                            <div style={{ width: \"10px\", height: \"10px\", backgroundColor: item.color, marginRight: \"5px\" }}></div>\n                            <span style={{ fontSize: '13px' }}>{item.type.charAt(0).toUpperCase() + item.type.slice(1)}</span>\n                        </div>\n                    ))}\n                    <img src={campass} width={20} alt=\"Compass\" /> <span style={{ fontSize: '13px' }}>Compass</span>\n                </div>\n\n                {isModalOpen && (\n                    <Modal\n                        show={isModalOpen}\n                        handleClose={handleCloseModal}\n                        chartData={chartData}\n                        chartType=\"line\"\n                    />\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default MapContainer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
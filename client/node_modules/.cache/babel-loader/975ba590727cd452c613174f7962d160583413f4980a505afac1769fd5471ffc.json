{"ast":null,"code":"var _jsxFileName = \"/home/mcalab3/Desktop/contributor/Smart-Irrigation-and-Fartigation-in-Arecanut-Farm/client/src/pages/User/Components/Farmer/logsGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = '8925502a781648f4443f9e01d96c7ff5';\nconst apiURL = 'https://api.openweathermap.org/data/2.5/weather?units=metric&lat=';\nconst timeAgo = timestamp => {\n  const now = new Date();\n  const diff = now - new Date(timestamp);\n  const minutes = Math.floor(diff / 1000 / 60);\n  const hours = Math.floor(diff / 1000 / 60 / 60);\n  const days = Math.floor(diff / 1000 / 60 / 60 / 24);\n  if (days > 0) return `${days} d${days > 1 ? 's' : ''} ago`;\n  if (hours > 0) return `${hours} hr${hours > 1 ? 's' : ''} ago`;\n  return `${minutes} min${minutes > 1 ? 's' : ''} ago`;\n};\nconst LogsGenerator = ({\n  data\n}) => {\n  _s();\n  const [logs, setLogs] = useState([]);\n  useEffect(() => {\n    var _data$device_values, _data$device_values2, _data$location_coordi;\n    if (!data) return;\n    const uniqueLogs = new Set();\n    const weatherDataCache = new Set();\n    const npkCache = new Set();\n    const valveCache = new Set();\n    let generatedLogs = [];\n    const fetchWeatherData = async coordinates => {\n      const [lat, lon] = coordinates.split(',').map(coord => parseFloat(coord.trim()));\n      const weatherData = await fetch(`${apiURL}${lat}&lon=${lon}&appid=${apiKey}`).then(response => response.json()).catch(err => console.error(err));\n      if (weatherData && weatherData.weather) {\n        const weatherLog = {\n          title: `Weather Prediction: ${weatherData.weather[0].description}, Temp: ${weatherData.main.temp}째C`,\n          timestamp: new Date().toISOString()\n        };\n        const cacheKey = `${coordinates}_${weatherData.weather[0].description}_${weatherData.main.temp}`;\n        if (!weatherDataCache.has(cacheKey)) {\n          weatherDataCache.add(cacheKey);\n          addUniqueLog(weatherLog);\n          if (weatherData.main.temp > 35) {\n            addUniqueLog({\n              title: `Extreme Heat Alert: Temp ${weatherData.main.temp}째C`,\n              timestamp: weatherLog.timestamp\n            });\n          } else if (weatherData.main.temp < 5) {\n            addUniqueLog({\n              title: `Extreme Cold Alert: Temp ${weatherData.main.temp}째C`,\n              timestamp: weatherLog.timestamp\n            });\n          }\n        }\n      }\n    };\n    const addUniqueLog = log => {\n      const logKey = `${log.title}_${log.timestamp}`;\n      if (!uniqueLogs.has(logKey)) {\n        uniqueLogs.add(logKey);\n        generatedLogs.push(log);\n      }\n    };\n    if ((_data$device_values = data.device_values) !== null && _data$device_values !== void 0 && _data$device_values.farm_device_data) {\n      data.device_values.farm_device_data.forEach(device => {\n        const npkLog = {\n          title: `NPK Levels - N: ${device.nitrogen}, P: ${device.phosphorus}, K: ${device.potassium}`,\n          timestamp: device.timestamp\n        };\n        if (!npkCache.has(JSON.stringify(npkLog))) {\n          addUniqueLog(npkLog);\n          npkCache.add(JSON.stringify(npkLog));\n        }\n      });\n    }\n    if ((_data$device_values2 = data.device_values) !== null && _data$device_values2 !== void 0 && _data$device_values2.valve_devices_data) {\n      data.device_values.valve_devices_data.forEach(valve => {\n        const valveLog = {\n          title: `Valve Status for ${valve.section_name}: ${valve.valve_status} (Mode: ${valve.valve_mode})`,\n          timestamp: valve.valve_timestamp\n        };\n        if (!valveCache.has(JSON.stringify(valveLog))) {\n          addUniqueLog(valveLog);\n          valveCache.add(JSON.stringify(valveLog));\n        }\n      });\n    }\n    if ((_data$location_coordi = data.location_coordinates) !== null && _data$location_coordi !== void 0 && _data$location_coordi.farm_coordinates) {\n      Promise.all(data.location_coordinates.farm_coordinates.map(coord => fetchWeatherData(coord))).then(() => setLogs(generatedLogs));\n    } else {\n      setLogs(generatedLogs);\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"borderring p-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"text-secondary\",\n      style: {\n        fontSize: '14px'\n      },\n      children: [data, \"Logs\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-hover\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              fontSize: '0.875rem'\n            },\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              fontSize: '0.875rem'\n            },\n            children: \"Time Ago\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: logs.map((log, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              fontSize: '0.875rem'\n            },\n            children: log.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              fontSize: '0.875rem'\n            },\n            children: timeAgo(log.timestamp)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(LogsGenerator, \"6h9FKNtuyCQaVwwdLqmS9omOzEQ=\");\n_c = LogsGenerator;\nexport default LogsGenerator;\nvar _c;\n$RefreshReg$(_c, \"LogsGenerator\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","apiKey","apiURL","timeAgo","timestamp","now","Date","diff","minutes","Math","floor","hours","days","LogsGenerator","data","_s","logs","setLogs","_data$device_values","_data$device_values2","_data$location_coordi","uniqueLogs","Set","weatherDataCache","npkCache","valveCache","generatedLogs","fetchWeatherData","coordinates","lat","lon","split","map","coord","parseFloat","trim","weatherData","fetch","then","response","json","catch","err","console","error","weather","weatherLog","title","description","main","temp","toISOString","cacheKey","has","add","addUniqueLog","log","logKey","push","device_values","farm_device_data","forEach","device","npkLog","nitrogen","phosphorus","potassium","JSON","stringify","valve_devices_data","valve","valveLog","section_name","valve_status","valve_mode","valve_timestamp","location_coordinates","farm_coordinates","Promise","all","className","children","style","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","index","_c","$RefreshReg$"],"sources":["/home/mcalab3/Desktop/contributor/Smart-Irrigation-and-Fartigation-in-Arecanut-Farm/client/src/pages/User/Components/Farmer/logsGenerator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst apiKey = '8925502a781648f4443f9e01d96c7ff5';\nconst apiURL = 'https://api.openweathermap.org/data/2.5/weather?units=metric&lat=';\n\nconst timeAgo = (timestamp) => {\n  const now = new Date();\n  const diff = now - new Date(timestamp);\n  const minutes = Math.floor(diff / 1000 / 60);\n  const hours = Math.floor(diff / 1000 / 60 / 60);\n  const days = Math.floor(diff / 1000 / 60 / 60 / 24);\n\n  if (days > 0) return `${days} d${days > 1 ? 's' : ''} ago`;\n  if (hours > 0) return `${hours} hr${hours > 1 ? 's' : ''} ago`;\n  return `${minutes} min${minutes > 1 ? 's' : ''} ago`;\n};\n\nconst LogsGenerator = ({ data }) => {\n  const [logs, setLogs] = useState([]);\n\n  useEffect(() => {\n    if (!data) return;\n\n    const uniqueLogs = new Set();\n    const weatherDataCache = new Set();\n    const npkCache = new Set();\n    const valveCache = new Set();\n    let generatedLogs = [];\n\n    const fetchWeatherData = async (coordinates) => {\n      const [lat, lon] = coordinates.split(',').map(coord => parseFloat(coord.trim()));\n      const weatherData = await fetch(`${apiURL}${lat}&lon=${lon}&appid=${apiKey}`)\n        .then(response => response.json())\n        .catch(err => console.error(err));\n      \n      if (weatherData && weatherData.weather) {\n        const weatherLog = {\n          title: `Weather Prediction: ${weatherData.weather[0].description}, Temp: ${weatherData.main.temp}째C`,\n          timestamp: new Date().toISOString(),\n        };\n        const cacheKey = `${coordinates}_${weatherData.weather[0].description}_${weatherData.main.temp}`;\n        if (!weatherDataCache.has(cacheKey)) {\n          weatherDataCache.add(cacheKey);\n          addUniqueLog(weatherLog);\n          if (weatherData.main.temp > 35) {\n            addUniqueLog({\n              title: `Extreme Heat Alert: Temp ${weatherData.main.temp}째C`,\n              timestamp: weatherLog.timestamp,\n            });\n          } else if (weatherData.main.temp < 5) {\n            addUniqueLog({\n              title: `Extreme Cold Alert: Temp ${weatherData.main.temp}째C`,\n              timestamp: weatherLog.timestamp,\n            });\n          }\n        }\n      }\n    };\n\n    const addUniqueLog = (log) => {\n      const logKey = `${log.title}_${log.timestamp}`;\n      if (!uniqueLogs.has(logKey)) {\n        uniqueLogs.add(logKey);\n        generatedLogs.push(log);\n      }\n    };\n\n    if (data.device_values?.farm_device_data) {\n      data.device_values.farm_device_data.forEach((device) => {\n        const npkLog = {\n          title: `NPK Levels - N: ${device.nitrogen}, P: ${device.phosphorus}, K: ${device.potassium}`,\n          timestamp: device.timestamp,\n        };\n        if (!npkCache.has(JSON.stringify(npkLog))) {\n          addUniqueLog(npkLog);\n          npkCache.add(JSON.stringify(npkLog));\n        }\n      });\n    }\n\n    if (data.device_values?.valve_devices_data) {\n      data.device_values.valve_devices_data.forEach((valve) => {\n        const valveLog = {\n          title: `Valve Status for ${valve.section_name}: ${valve.valve_status} (Mode: ${valve.valve_mode})`,\n          timestamp: valve.valve_timestamp,\n        };\n        if (!valveCache.has(JSON.stringify(valveLog))) {\n          addUniqueLog(valveLog);\n          valveCache.add(JSON.stringify(valveLog));\n        }\n      });\n    }\n\n    if (data.location_coordinates?.farm_coordinates) {\n      Promise.all(\n        data.location_coordinates.farm_coordinates.map(coord => fetchWeatherData(coord))\n      ).then(() => setLogs(generatedLogs));\n    } else {\n      setLogs(generatedLogs);\n    }\n  }, [data]);\n\n  return (\n    <div className='borderring p-3'>\n      <h5 className='text-secondary' style={{ fontSize: '14px' }}>{data}Logs</h5>\n      <table className=\"table table-hover\">\n        <thead>\n          <tr>\n            <th style={{ fontSize: '0.875rem' }}>Title</th>\n            <th style={{ fontSize: '0.875rem' }}>Time Ago</th>\n          </tr>\n        </thead>\n        <tbody>\n          {logs.map((log, index) => (\n            <tr key={index}>\n              <td style={{ fontSize: '0.875rem' }}>{log.title}</td>\n              <td style={{ fontSize: '0.875rem' }}>{timeAgo(log.timestamp)}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default LogsGenerator;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,MAAM,GAAG,kCAAkC;AACjD,MAAMC,MAAM,GAAG,mEAAmE;AAElF,MAAMC,OAAO,GAAIC,SAAS,IAAK;EAC7B,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;EACtB,MAAMC,IAAI,GAAGF,GAAG,GAAG,IAAIC,IAAI,CAACF,SAAS,CAAC;EACtC,MAAMI,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,IAAI,GAAG,IAAI,GAAG,EAAE,CAAC;EAC5C,MAAMI,KAAK,GAAGF,IAAI,CAACC,KAAK,CAACH,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;EAC/C,MAAMK,IAAI,GAAGH,IAAI,CAACC,KAAK,CAACH,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;EAEnD,IAAIK,IAAI,GAAG,CAAC,EAAE,OAAO,GAAGA,IAAI,KAAKA,IAAI,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,MAAM;EAC1D,IAAID,KAAK,GAAG,CAAC,EAAE,OAAO,GAAGA,KAAK,MAAMA,KAAK,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,MAAM;EAC9D,OAAO,GAAGH,OAAO,OAAOA,OAAO,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,MAAM;AACtD,CAAC;AAED,MAAMK,aAAa,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IAAA,IAAAoB,mBAAA,EAAAC,oBAAA,EAAAC,qBAAA;IACd,IAAI,CAACN,IAAI,EAAE;IAEX,MAAMO,UAAU,GAAG,IAAIC,GAAG,CAAC,CAAC;IAC5B,MAAMC,gBAAgB,GAAG,IAAID,GAAG,CAAC,CAAC;IAClC,MAAME,QAAQ,GAAG,IAAIF,GAAG,CAAC,CAAC;IAC1B,MAAMG,UAAU,GAAG,IAAIH,GAAG,CAAC,CAAC;IAC5B,IAAII,aAAa,GAAG,EAAE;IAEtB,MAAMC,gBAAgB,GAAG,MAAOC,WAAW,IAAK;MAC9C,MAAM,CAACC,GAAG,EAAEC,GAAG,CAAC,GAAGF,WAAW,CAACG,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,KAAK,IAAIC,UAAU,CAACD,KAAK,CAACE,IAAI,CAAC,CAAC,CAAC,CAAC;MAChF,MAAMC,WAAW,GAAG,MAAMC,KAAK,CAAC,GAAGnC,MAAM,GAAG2B,GAAG,QAAQC,GAAG,UAAU7B,MAAM,EAAE,CAAC,CAC1EqC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;MAEnC,IAAIN,WAAW,IAAIA,WAAW,CAACS,OAAO,EAAE;QACtC,MAAMC,UAAU,GAAG;UACjBC,KAAK,EAAE,uBAAuBX,WAAW,CAACS,OAAO,CAAC,CAAC,CAAC,CAACG,WAAW,WAAWZ,WAAW,CAACa,IAAI,CAACC,IAAI,IAAI;UACpG9C,SAAS,EAAE,IAAIE,IAAI,CAAC,CAAC,CAAC6C,WAAW,CAAC;QACpC,CAAC;QACD,MAAMC,QAAQ,GAAG,GAAGxB,WAAW,IAAIQ,WAAW,CAACS,OAAO,CAAC,CAAC,CAAC,CAACG,WAAW,IAAIZ,WAAW,CAACa,IAAI,CAACC,IAAI,EAAE;QAChG,IAAI,CAAC3B,gBAAgB,CAAC8B,GAAG,CAACD,QAAQ,CAAC,EAAE;UACnC7B,gBAAgB,CAAC+B,GAAG,CAACF,QAAQ,CAAC;UAC9BG,YAAY,CAACT,UAAU,CAAC;UACxB,IAAIV,WAAW,CAACa,IAAI,CAACC,IAAI,GAAG,EAAE,EAAE;YAC9BK,YAAY,CAAC;cACXR,KAAK,EAAE,4BAA4BX,WAAW,CAACa,IAAI,CAACC,IAAI,IAAI;cAC5D9C,SAAS,EAAE0C,UAAU,CAAC1C;YACxB,CAAC,CAAC;UACJ,CAAC,MAAM,IAAIgC,WAAW,CAACa,IAAI,CAACC,IAAI,GAAG,CAAC,EAAE;YACpCK,YAAY,CAAC;cACXR,KAAK,EAAE,4BAA4BX,WAAW,CAACa,IAAI,CAACC,IAAI,IAAI;cAC5D9C,SAAS,EAAE0C,UAAU,CAAC1C;YACxB,CAAC,CAAC;UACJ;QACF;MACF;IACF,CAAC;IAED,MAAMmD,YAAY,GAAIC,GAAG,IAAK;MAC5B,MAAMC,MAAM,GAAG,GAAGD,GAAG,CAACT,KAAK,IAAIS,GAAG,CAACpD,SAAS,EAAE;MAC9C,IAAI,CAACiB,UAAU,CAACgC,GAAG,CAACI,MAAM,CAAC,EAAE;QAC3BpC,UAAU,CAACiC,GAAG,CAACG,MAAM,CAAC;QACtB/B,aAAa,CAACgC,IAAI,CAACF,GAAG,CAAC;MACzB;IACF,CAAC;IAED,KAAAtC,mBAAA,GAAIJ,IAAI,CAAC6C,aAAa,cAAAzC,mBAAA,eAAlBA,mBAAA,CAAoB0C,gBAAgB,EAAE;MACxC9C,IAAI,CAAC6C,aAAa,CAACC,gBAAgB,CAACC,OAAO,CAAEC,MAAM,IAAK;QACtD,MAAMC,MAAM,GAAG;UACbhB,KAAK,EAAE,mBAAmBe,MAAM,CAACE,QAAQ,QAAQF,MAAM,CAACG,UAAU,QAAQH,MAAM,CAACI,SAAS,EAAE;UAC5F9D,SAAS,EAAE0D,MAAM,CAAC1D;QACpB,CAAC;QACD,IAAI,CAACoB,QAAQ,CAAC6B,GAAG,CAACc,IAAI,CAACC,SAAS,CAACL,MAAM,CAAC,CAAC,EAAE;UACzCR,YAAY,CAACQ,MAAM,CAAC;UACpBvC,QAAQ,CAAC8B,GAAG,CAACa,IAAI,CAACC,SAAS,CAACL,MAAM,CAAC,CAAC;QACtC;MACF,CAAC,CAAC;IACJ;IAEA,KAAA5C,oBAAA,GAAIL,IAAI,CAAC6C,aAAa,cAAAxC,oBAAA,eAAlBA,oBAAA,CAAoBkD,kBAAkB,EAAE;MAC1CvD,IAAI,CAAC6C,aAAa,CAACU,kBAAkB,CAACR,OAAO,CAAES,KAAK,IAAK;QACvD,MAAMC,QAAQ,GAAG;UACfxB,KAAK,EAAE,oBAAoBuB,KAAK,CAACE,YAAY,KAAKF,KAAK,CAACG,YAAY,WAAWH,KAAK,CAACI,UAAU,GAAG;UAClGtE,SAAS,EAAEkE,KAAK,CAACK;QACnB,CAAC;QACD,IAAI,CAAClD,UAAU,CAAC4B,GAAG,CAACc,IAAI,CAACC,SAAS,CAACG,QAAQ,CAAC,CAAC,EAAE;UAC7ChB,YAAY,CAACgB,QAAQ,CAAC;UACtB9C,UAAU,CAAC6B,GAAG,CAACa,IAAI,CAACC,SAAS,CAACG,QAAQ,CAAC,CAAC;QAC1C;MACF,CAAC,CAAC;IACJ;IAEA,KAAAnD,qBAAA,GAAIN,IAAI,CAAC8D,oBAAoB,cAAAxD,qBAAA,eAAzBA,qBAAA,CAA2ByD,gBAAgB,EAAE;MAC/CC,OAAO,CAACC,GAAG,CACTjE,IAAI,CAAC8D,oBAAoB,CAACC,gBAAgB,CAAC7C,GAAG,CAACC,KAAK,IAAIN,gBAAgB,CAACM,KAAK,CAAC,CACjF,CAAC,CAACK,IAAI,CAAC,MAAMrB,OAAO,CAACS,aAAa,CAAC,CAAC;IACtC,CAAC,MAAM;MACLT,OAAO,CAACS,aAAa,CAAC;IACxB;EACF,CAAC,EAAE,CAACZ,IAAI,CAAC,CAAC;EAEV,oBACEd,OAAA;IAAKgF,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BjF,OAAA;MAAIgF,SAAS,EAAC,gBAAgB;MAACE,KAAK,EAAE;QAAEC,QAAQ,EAAE;MAAO,CAAE;MAAAF,QAAA,GAAEnE,IAAI,EAAC,MAAI;IAAA;MAAAsE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3EvF,OAAA;MAAOgF,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAClCjF,OAAA;QAAAiF,QAAA,eACEjF,OAAA;UAAAiF,QAAA,gBACEjF,OAAA;YAAIkF,KAAK,EAAE;cAAEC,QAAQ,EAAE;YAAW,CAAE;YAAAF,QAAA,EAAC;UAAK;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC/CvF,OAAA;YAAIkF,KAAK,EAAE;cAAEC,QAAQ,EAAE;YAAW,CAAE;YAAAF,QAAA,EAAC;UAAQ;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRvF,OAAA;QAAAiF,QAAA,EACGjE,IAAI,CAACgB,GAAG,CAAC,CAACwB,GAAG,EAAEgC,KAAK,kBACnBxF,OAAA;UAAAiF,QAAA,gBACEjF,OAAA;YAAIkF,KAAK,EAAE;cAAEC,QAAQ,EAAE;YAAW,CAAE;YAAAF,QAAA,EAAEzB,GAAG,CAACT;UAAK;YAAAqC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACrDvF,OAAA;YAAIkF,KAAK,EAAE;cAAEC,QAAQ,EAAE;YAAW,CAAE;YAAAF,QAAA,EAAE9E,OAAO,CAACqD,GAAG,CAACpD,SAAS;UAAC;YAAAgF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GAF3DC,KAAK;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACxE,EAAA,CA1GIF,aAAa;AAAA4E,EAAA,GAAb5E,aAAa;AA4GnB,eAAeA,aAAa;AAAC,IAAA4E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
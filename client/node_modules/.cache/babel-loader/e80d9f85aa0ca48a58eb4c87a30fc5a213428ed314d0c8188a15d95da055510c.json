{"ast":null,"code":"var _jsxFileName = \"/home/mcalab3/Desktop/contributor/Smart-Irrigation-and-Fartigation-in-Arecanut-Farm/client/src/pages/User/Components/Farmer/logsGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = '8925502a781648f4443f9e01d96c7ff5';\nconst apiURL = 'https://api.openweathermap.org/data/2.5/weather?units=metric&lat=';\nconst timeAgo = timestamp => {\n  const now = new Date();\n  const diff = now - new Date(timestamp);\n  const minutes = Math.floor(diff / 1000 / 60);\n  const hours = Math.floor(diff / 1000 / 60 / 60);\n  const days = Math.floor(diff / 1000 / 60 / 60 / 24);\n  if (days > 0) return `${days} d${days > 1 ? 's' : ''} ago`;\n  if (hours > 0) return `${hours} hr${hours > 1 ? 's' : ''} ago`;\n  return `${minutes} min${minutes > 1 ? 's' : ''} ago`;\n};\nconst LogsGenerator = ({\n  data\n}) => {\n  _s();\n  const [logs, setLogs] = useState([]);\n  useEffect(() => {\n    if (!data) return;\n    const generatedLogs = [];\n    const weatherDataCache = new Set();\n    const npkCache = new Set();\n    const valveCache = new Set();\n    const moistureCache = new Set();\n    const fetchWeatherData = async farm => {\n      const [lat, lon] = farm.farm_location.split(',').map(coord => parseFloat(coord.trim()));\n      const weatherData = await fetch(`${apiURL}${lat}&lon=${lon}&appid=${apiKey}`).then(response => response.json()).catch(err => console.error(err));\n      if (weatherData) {\n        const weatherKey = `${farm.farm_name}_${weatherData.weather[0].description}_${weatherData.main.temp}`;\n        if (!weatherDataCache.has(weatherKey)) {\n          weatherDataCache.add(weatherKey);\n          generatedLogs.push({\n            title: `Weather Prediction for ${farm.farm_name}: ${weatherData.weather[0].description}, Temp: ${weatherData.main.temp}°C`,\n            timestamp: new Date().toISOString()\n          });\n          if (weatherData.main.temp > 35) {\n            generatedLogs.push({\n              title: `Extreme Heat for ${farm.farm_name}: Temp: ${weatherData.main.temp}°C`,\n              timestamp: new Date().toISOString()\n            });\n          } else if (weatherData.main.temp < 5) {\n            generatedLogs.push({\n              title: `Extreme Cold for ${farm.farm_name}: Temp: ${weatherData.main.temp}°C`,\n              timestamp: new Date().toISOString()\n            });\n          }\n        }\n      }\n    };\n    if (data.device_values && data.device_values.farm_device_data) {\n      data.device_values.farm_device_data.forEach(device => {\n        const npkKey = `NPK_${device.farm_device_id}_${device.timestamp}`;\n        if (!npkCache.has(npkKey)) {\n          npkCache.add(npkKey);\n          generatedLogs.push({\n            title: `NPK Levels - N: ${device.nitrogen}, P: ${device.phosphorus || 'null'}, K: ${device.potassium}`,\n            timestamp: device.timestamp\n          });\n        }\n      });\n    }\n    if (data.device_values && data.device_values.valve_devices_data) {\n      data.device_values.valve_devices_data.forEach(valve => {\n        const valveKey = `Valve_${valve.section_id}_${valve.valve_timestamp}`;\n        if (!valveCache.has(valveKey)) {\n          valveCache.add(valveKey);\n          generatedLogs.push({\n            title: `Valve Status for ${valve.section_name}: ${valve.valve_status} (Mode: ${valve.valve_mode})`,\n            timestamp: valve.valve_timestamp\n          });\n        }\n      });\n    }\n    if (data.device_values && data.device_values.moisture_device_value) {\n      data.device_values.moisture_device_value.forEach(moisture => {\n        if (moisture.moisture_value <= 30 || moisture.moisture_value >= 80) {\n          const moistureKey = `Moisture_${moisture.section_id}_${moisture.timestamp}`;\n          if (!moistureCache.has(moistureKey)) {\n            moistureCache.add(moistureKey);\n            generatedLogs.push({\n              title: `Extreme Moisture for Section ${moisture.section_id}: ${moisture.moisture_value}%`,\n              timestamp: moisture.timestamp\n            });\n          }\n        }\n      });\n    }\n    if (data.farmer_farms) {\n      Promise.all(data.farmer_farms.map(fetchWeatherData)).then(() => {\n        setLogs(generatedLogs);\n      });\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"borderring p-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"text-secondary\",\n      style: {\n        fontSize: '14px'\n      },\n      children: \"Logs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-hover\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              fontSize: '0.875rem'\n            },\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              fontSize: '0.875rem'\n            },\n            children: \"Time Ago\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: logs.map((log, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              fontSize: '0.875rem'\n            },\n            children: log.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              fontSize: '0.875rem'\n            },\n            children: timeAgo(log.timestamp)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(LogsGenerator, \"6h9FKNtuyCQaVwwdLqmS9omOzEQ=\");\n_c = LogsGenerator;\nexport default LogsGenerator;\nvar _c;\n$RefreshReg$(_c, \"LogsGenerator\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","apiKey","apiURL","timeAgo","timestamp","now","Date","diff","minutes","Math","floor","hours","days","LogsGenerator","data","_s","logs","setLogs","generatedLogs","weatherDataCache","Set","npkCache","valveCache","moistureCache","fetchWeatherData","farm","lat","lon","farm_location","split","map","coord","parseFloat","trim","weatherData","fetch","then","response","json","catch","err","console","error","weatherKey","farm_name","weather","description","main","temp","has","add","push","title","toISOString","device_values","farm_device_data","forEach","device","npkKey","farm_device_id","nitrogen","phosphorus","potassium","valve_devices_data","valve","valveKey","section_id","valve_timestamp","section_name","valve_status","valve_mode","moisture_device_value","moisture","moisture_value","moistureKey","farmer_farms","Promise","all","className","children","style","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","log","index","_c","$RefreshReg$"],"sources":["/home/mcalab3/Desktop/contributor/Smart-Irrigation-and-Fartigation-in-Arecanut-Farm/client/src/pages/User/Components/Farmer/logsGenerator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst apiKey = '8925502a781648f4443f9e01d96c7ff5';\nconst apiURL = 'https://api.openweathermap.org/data/2.5/weather?units=metric&lat=';\n\nconst timeAgo = (timestamp) => {\n  const now = new Date();\n  const diff = now - new Date(timestamp);\n  const minutes = Math.floor(diff / 1000 / 60);\n  const hours = Math.floor(diff / 1000 / 60 / 60);\n  const days = Math.floor(diff / 1000 / 60 / 60 / 24);\n\n  if (days > 0) return `${days} d${days > 1 ? 's' : ''} ago`;\n  if (hours > 0) return `${hours} hr${hours > 1 ? 's' : ''} ago`;\n  return `${minutes} min${minutes > 1 ? 's' : ''} ago`;\n};\n\nconst LogsGenerator = ({ data }) => {\n  const [logs, setLogs] = useState([]);\n\n  useEffect(() => {\n    if (!data) return;\n\n    const generatedLogs = [];\n    const weatherDataCache = new Set();\n    const npkCache = new Set();\n    const valveCache = new Set();\n    const moistureCache = new Set();\n\n    const fetchWeatherData = async (farm) => {\n      const [lat, lon] = farm.farm_location.split(',').map(coord => parseFloat(coord.trim()));\n      const weatherData = await fetch(`${apiURL}${lat}&lon=${lon}&appid=${apiKey}`)\n        .then(response => response.json())\n        .catch(err => console.error(err));\n      \n      if (weatherData) {\n        const weatherKey = `${farm.farm_name}_${weatherData.weather[0].description}_${weatherData.main.temp}`;\n        if (!weatherDataCache.has(weatherKey)) {\n          weatherDataCache.add(weatherKey);\n          generatedLogs.push({\n            title: `Weather Prediction for ${farm.farm_name}: ${weatherData.weather[0].description}, Temp: ${weatherData.main.temp}°C`,\n            timestamp: new Date().toISOString(),\n          });\n          \n          if (weatherData.main.temp > 35) {\n            generatedLogs.push({\n              title: `Extreme Heat for ${farm.farm_name}: Temp: ${weatherData.main.temp}°C`,\n              timestamp: new Date().toISOString(),\n            });\n          } else if (weatherData.main.temp < 5) {\n            generatedLogs.push({\n              title: `Extreme Cold for ${farm.farm_name}: Temp: ${weatherData.main.temp}°C`,\n              timestamp: new Date().toISOString(),\n            });\n          }\n        }\n      }\n    };\n\n    if (data.device_values && data.device_values.farm_device_data) {\n      data.device_values.farm_device_data.forEach((device) => {\n        const npkKey = `NPK_${device.farm_device_id}_${device.timestamp}`;\n        if (!npkCache.has(npkKey)) {\n          npkCache.add(npkKey);\n          generatedLogs.push({\n            title: `NPK Levels - N: ${device.nitrogen}, P: ${device.phosphorus || 'null'}, K: ${device.potassium}`,\n            timestamp: device.timestamp,\n          });\n        }\n      });\n    }\n\n    if (data.device_values && data.device_values.valve_devices_data) {\n      data.device_values.valve_devices_data.forEach((valve) => {\n        const valveKey = `Valve_${valve.section_id}_${valve.valve_timestamp}`;\n        if (!valveCache.has(valveKey)) {\n          valveCache.add(valveKey);\n          generatedLogs.push({\n            title: `Valve Status for ${valve.section_name}: ${valve.valve_status} (Mode: ${valve.valve_mode})`,\n            timestamp: valve.valve_timestamp,\n          });\n        }\n      });\n    }\n\n    if (data.device_values && data.device_values.moisture_device_value) {\n      data.device_values.moisture_device_value.forEach((moisture) => {\n        if (moisture.moisture_value <= 30 || moisture.moisture_value >= 80) {\n          const moistureKey = `Moisture_${moisture.section_id}_${moisture.timestamp}`;\n          if (!moistureCache.has(moistureKey)) {\n            moistureCache.add(moistureKey);\n            generatedLogs.push({\n              title: `Extreme Moisture for Section ${moisture.section_id}: ${moisture.moisture_value}%`,\n              timestamp: moisture.timestamp,\n            });\n          }\n        }\n      });\n    }\n\n    if (data.farmer_farms) {\n      Promise.all(data.farmer_farms.map(fetchWeatherData)).then(() => {\n        setLogs(generatedLogs);\n      });\n    }\n  }, [data]);\n\n  return (\n    <div className='borderring p-3'>\n      <h5 className='text-secondary' style={{ fontSize: '14px' }}>Logs</h5>\n      <table className=\"table table-hover\">\n        <thead>\n          <tr>\n            <th style={{ fontSize: '0.875rem' }}>Title</th>\n            <th style={{ fontSize: '0.875rem' }}>Time Ago</th>\n          </tr>\n        </thead>\n        <tbody>\n          {logs.map((log, index) => (\n            <tr key={index}>\n              <td style={{ fontSize: '0.875rem' }}>{log.title}</td>\n              <td style={{ fontSize: '0.875rem' }}>{timeAgo(log.timestamp)}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default LogsGenerator;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,MAAM,GAAG,kCAAkC;AACjD,MAAMC,MAAM,GAAG,mEAAmE;AAElF,MAAMC,OAAO,GAAIC,SAAS,IAAK;EAC7B,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;EACtB,MAAMC,IAAI,GAAGF,GAAG,GAAG,IAAIC,IAAI,CAACF,SAAS,CAAC;EACtC,MAAMI,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,IAAI,GAAG,IAAI,GAAG,EAAE,CAAC;EAC5C,MAAMI,KAAK,GAAGF,IAAI,CAACC,KAAK,CAACH,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;EAC/C,MAAMK,IAAI,GAAGH,IAAI,CAACC,KAAK,CAACH,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;EAEnD,IAAIK,IAAI,GAAG,CAAC,EAAE,OAAO,GAAGA,IAAI,KAAKA,IAAI,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,MAAM;EAC1D,IAAID,KAAK,GAAG,CAAC,EAAE,OAAO,GAAGA,KAAK,MAAMA,KAAK,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,MAAM;EAC9D,OAAO,GAAGH,OAAO,OAAOA,OAAO,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,MAAM;AACtD,CAAC;AAED,MAAMK,aAAa,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACd,IAAI,CAACgB,IAAI,EAAE;IAEX,MAAMI,aAAa,GAAG,EAAE;IACxB,MAAMC,gBAAgB,GAAG,IAAIC,GAAG,CAAC,CAAC;IAClC,MAAMC,QAAQ,GAAG,IAAID,GAAG,CAAC,CAAC;IAC1B,MAAME,UAAU,GAAG,IAAIF,GAAG,CAAC,CAAC;IAC5B,MAAMG,aAAa,GAAG,IAAIH,GAAG,CAAC,CAAC;IAE/B,MAAMI,gBAAgB,GAAG,MAAOC,IAAI,IAAK;MACvC,MAAM,CAACC,GAAG,EAAEC,GAAG,CAAC,GAAGF,IAAI,CAACG,aAAa,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,KAAK,IAAIC,UAAU,CAACD,KAAK,CAACE,IAAI,CAAC,CAAC,CAAC,CAAC;MACvF,MAAMC,WAAW,GAAG,MAAMC,KAAK,CAAC,GAAGjC,MAAM,GAAGwB,GAAG,QAAQC,GAAG,UAAU1B,MAAM,EAAE,CAAC,CAC1EmC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;MAEnC,IAAIN,WAAW,EAAE;QACf,MAAMS,UAAU,GAAG,GAAGlB,IAAI,CAACmB,SAAS,IAAIV,WAAW,CAACW,OAAO,CAAC,CAAC,CAAC,CAACC,WAAW,IAAIZ,WAAW,CAACa,IAAI,CAACC,IAAI,EAAE;QACrG,IAAI,CAAC7B,gBAAgB,CAAC8B,GAAG,CAACN,UAAU,CAAC,EAAE;UACrCxB,gBAAgB,CAAC+B,GAAG,CAACP,UAAU,CAAC;UAChCzB,aAAa,CAACiC,IAAI,CAAC;YACjBC,KAAK,EAAE,0BAA0B3B,IAAI,CAACmB,SAAS,KAAKV,WAAW,CAACW,OAAO,CAAC,CAAC,CAAC,CAACC,WAAW,WAAWZ,WAAW,CAACa,IAAI,CAACC,IAAI,IAAI;YAC1H5C,SAAS,EAAE,IAAIE,IAAI,CAAC,CAAC,CAAC+C,WAAW,CAAC;UACpC,CAAC,CAAC;UAEF,IAAInB,WAAW,CAACa,IAAI,CAACC,IAAI,GAAG,EAAE,EAAE;YAC9B9B,aAAa,CAACiC,IAAI,CAAC;cACjBC,KAAK,EAAE,oBAAoB3B,IAAI,CAACmB,SAAS,WAAWV,WAAW,CAACa,IAAI,CAACC,IAAI,IAAI;cAC7E5C,SAAS,EAAE,IAAIE,IAAI,CAAC,CAAC,CAAC+C,WAAW,CAAC;YACpC,CAAC,CAAC;UACJ,CAAC,MAAM,IAAInB,WAAW,CAACa,IAAI,CAACC,IAAI,GAAG,CAAC,EAAE;YACpC9B,aAAa,CAACiC,IAAI,CAAC;cACjBC,KAAK,EAAE,oBAAoB3B,IAAI,CAACmB,SAAS,WAAWV,WAAW,CAACa,IAAI,CAACC,IAAI,IAAI;cAC7E5C,SAAS,EAAE,IAAIE,IAAI,CAAC,CAAC,CAAC+C,WAAW,CAAC;YACpC,CAAC,CAAC;UACJ;QACF;MACF;IACF,CAAC;IAED,IAAIvC,IAAI,CAACwC,aAAa,IAAIxC,IAAI,CAACwC,aAAa,CAACC,gBAAgB,EAAE;MAC7DzC,IAAI,CAACwC,aAAa,CAACC,gBAAgB,CAACC,OAAO,CAAEC,MAAM,IAAK;QACtD,MAAMC,MAAM,GAAG,OAAOD,MAAM,CAACE,cAAc,IAAIF,MAAM,CAACrD,SAAS,EAAE;QACjE,IAAI,CAACiB,QAAQ,CAAC4B,GAAG,CAACS,MAAM,CAAC,EAAE;UACzBrC,QAAQ,CAAC6B,GAAG,CAACQ,MAAM,CAAC;UACpBxC,aAAa,CAACiC,IAAI,CAAC;YACjBC,KAAK,EAAE,mBAAmBK,MAAM,CAACG,QAAQ,QAAQH,MAAM,CAACI,UAAU,IAAI,MAAM,QAAQJ,MAAM,CAACK,SAAS,EAAE;YACtG1D,SAAS,EAAEqD,MAAM,CAACrD;UACpB,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;IACJ;IAEA,IAAIU,IAAI,CAACwC,aAAa,IAAIxC,IAAI,CAACwC,aAAa,CAACS,kBAAkB,EAAE;MAC/DjD,IAAI,CAACwC,aAAa,CAACS,kBAAkB,CAACP,OAAO,CAAEQ,KAAK,IAAK;QACvD,MAAMC,QAAQ,GAAG,SAASD,KAAK,CAACE,UAAU,IAAIF,KAAK,CAACG,eAAe,EAAE;QACrE,IAAI,CAAC7C,UAAU,CAAC2B,GAAG,CAACgB,QAAQ,CAAC,EAAE;UAC7B3C,UAAU,CAAC4B,GAAG,CAACe,QAAQ,CAAC;UACxB/C,aAAa,CAACiC,IAAI,CAAC;YACjBC,KAAK,EAAE,oBAAoBY,KAAK,CAACI,YAAY,KAAKJ,KAAK,CAACK,YAAY,WAAWL,KAAK,CAACM,UAAU,GAAG;YAClGlE,SAAS,EAAE4D,KAAK,CAACG;UACnB,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;IACJ;IAEA,IAAIrD,IAAI,CAACwC,aAAa,IAAIxC,IAAI,CAACwC,aAAa,CAACiB,qBAAqB,EAAE;MAClEzD,IAAI,CAACwC,aAAa,CAACiB,qBAAqB,CAACf,OAAO,CAAEgB,QAAQ,IAAK;QAC7D,IAAIA,QAAQ,CAACC,cAAc,IAAI,EAAE,IAAID,QAAQ,CAACC,cAAc,IAAI,EAAE,EAAE;UAClE,MAAMC,WAAW,GAAG,YAAYF,QAAQ,CAACN,UAAU,IAAIM,QAAQ,CAACpE,SAAS,EAAE;UAC3E,IAAI,CAACmB,aAAa,CAAC0B,GAAG,CAACyB,WAAW,CAAC,EAAE;YACnCnD,aAAa,CAAC2B,GAAG,CAACwB,WAAW,CAAC;YAC9BxD,aAAa,CAACiC,IAAI,CAAC;cACjBC,KAAK,EAAE,gCAAgCoB,QAAQ,CAACN,UAAU,KAAKM,QAAQ,CAACC,cAAc,GAAG;cACzFrE,SAAS,EAAEoE,QAAQ,CAACpE;YACtB,CAAC,CAAC;UACJ;QACF;MACF,CAAC,CAAC;IACJ;IAEA,IAAIU,IAAI,CAAC6D,YAAY,EAAE;MACrBC,OAAO,CAACC,GAAG,CAAC/D,IAAI,CAAC6D,YAAY,CAAC7C,GAAG,CAACN,gBAAgB,CAAC,CAAC,CAACY,IAAI,CAAC,MAAM;QAC9DnB,OAAO,CAACC,aAAa,CAAC;MACxB,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACJ,IAAI,CAAC,CAAC;EAEV,oBACEd,OAAA;IAAK8E,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7B/E,OAAA;MAAI8E,SAAS,EAAC,gBAAgB;MAACE,KAAK,EAAE;QAAEC,QAAQ,EAAE;MAAO,CAAE;MAAAF,QAAA,EAAC;IAAI;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrErF,OAAA;MAAO8E,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAClC/E,OAAA;QAAA+E,QAAA,eACE/E,OAAA;UAAA+E,QAAA,gBACE/E,OAAA;YAAIgF,KAAK,EAAE;cAAEC,QAAQ,EAAE;YAAW,CAAE;YAAAF,QAAA,EAAC;UAAK;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC/CrF,OAAA;YAAIgF,KAAK,EAAE;cAAEC,QAAQ,EAAE;YAAW,CAAE;YAAAF,QAAA,EAAC;UAAQ;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRrF,OAAA;QAAA+E,QAAA,EACG/D,IAAI,CAACc,GAAG,CAAC,CAACwD,GAAG,EAAEC,KAAK,kBACnBvF,OAAA;UAAA+E,QAAA,gBACE/E,OAAA;YAAIgF,KAAK,EAAE;cAAEC,QAAQ,EAAE;YAAW,CAAE;YAAAF,QAAA,EAAEO,GAAG,CAAClC;UAAK;YAAA8B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACrDrF,OAAA;YAAIgF,KAAK,EAAE;cAAEC,QAAQ,EAAE;YAAW,CAAE;YAAAF,QAAA,EAAE5E,OAAO,CAACmF,GAAG,CAAClF,SAAS;UAAC;YAAA8E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GAF3DE,KAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACtE,EAAA,CA/GIF,aAAa;AAAA2E,EAAA,GAAb3E,aAAa;AAiHnB,eAAeA,aAAa;AAAC,IAAA2E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}